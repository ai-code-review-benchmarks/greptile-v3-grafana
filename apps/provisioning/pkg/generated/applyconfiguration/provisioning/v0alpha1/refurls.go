// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v0alpha1

// RefURLsApplyConfiguration represents a declarative configuration of the RefURLs type for use
// with apply.
type RefURLsApplyConfiguration struct {
	SourceURL         *string `json:"sourceURL,omitempty"`
	NewPullRequestURL *string `json:"newPullRequestURL,omitempty"`
	CompareURL        *string `json:"compareURL,omitempty"`
}

// RefURLsApplyConfiguration constructs a declarative configuration of the RefURLs type for use with
// apply.
func RefURLs() *RefURLsApplyConfiguration {
	return &RefURLsApplyConfiguration{}
}

// WithSourceURL sets the SourceURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SourceURL field is set to the value of the last call.
func (b *RefURLsApplyConfiguration) WithSourceURL(value string) *RefURLsApplyConfiguration {
	b.SourceURL = &value
	return b
}

// WithNewPullRequestURL sets the NewPullRequestURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NewPullRequestURL field is set to the value of the last call.
func (b *RefURLsApplyConfiguration) WithNewPullRequestURL(value string) *RefURLsApplyConfiguration {
	b.NewPullRequestURL = &value
	return b
}

// WithCompareURL sets the CompareURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CompareURL field is set to the value of the last call.
func (b *RefURLsApplyConfiguration) WithCompareURL(value string) *RefURLsApplyConfiguration {
	b.CompareURL = &value
	return b
}
