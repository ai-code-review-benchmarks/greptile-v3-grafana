---
{"kind": "pipeline", "type": "docker", "name": "pr-verify-drone", "trigger": {"event": ["pull_request"], "paths": {"exclude": ["docs/**", "*.md"], "include": ["scripts/drone/**", ".drone.yml", ".drone.star"]}}, "services": [], "steps": [{"name": "identify-runner", "image": "alpine:3.21.3", "commands": ["echo $DRONE_RUNNER_NAME"]}, {"name": "compile-build-cmd", "image": "golang:1.24.4-alpine", "commands": ["go build -o ./bin/build -ldflags '-extldflags -static' ./pkg/build/cmd"], "depends_on": [], "environment": {"CGO_ENABLED": 0}}, {"name": "lint-drone", "image": "byrnedo/alpine-curl:0.1.8", "commands": ["./bin/build verify-drone"], "depends_on": ["compile-build-cmd"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "pr-verify-starlark", "trigger": {"event": ["pull_request"], "paths": {"exclude": ["docs/**", "*.md"], "include": ["scripts/drone/**", ".drone.star"]}}, "services": [], "steps": [{"name": "identify-runner", "image": "alpine:3.21.3", "commands": ["echo $DRONE_RUNNER_NAME"]}, {"name": "lint-starlark", "image": "golang:1.24.4-alpine", "commands": ["go install github.com/bazelbuild/buildtools/buildifier@latest", "buildifier --lint=warn -mode=check -r ."], "depends_on": []}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "pr-build-e2e", "trigger": {"event": ["pull_request"], "paths": {"exclude": ["*.md", "docs/**", "latest.json"]}}, "services": [], "steps": [{"name": "github-app-generate-token", "image": "us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/github-app-secret-writer:2024-11-05-v11688112090.1-83920c59", "environment": {"GITHUB_APP_ID": {"from_secret": "github-app-app-id"}, "GITHUB_APP_INSTALLATION_ID": {"from_secret": "github-app-installation-id"}, "GITHUB_APP_PRIVATE_KEY": {"from_secret": "github-app-private-key"}}, "commands": ["echo $(/usr/bin/github-app-external-token) > /github-app/token"], "volumes": [{"name": "github-app", "path": "/github-app"}], "failure": "ignore"}, {"name": "identify-runner", "image": "alpine:3.21.3", "commands": ["echo $DRONE_RUNNER_NAME"]}, {"name": "grabpl", "image": "byrnedo/alpine-curl:0.1.8", "commands": ["mkdir -p bin", "curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v3.1.2/grabpl", "chmod +x bin/grabpl"]}, {"name": "compile-build-cmd", "image": "golang:1.24.4-alpine", "commands": ["go build -o ./bin/build -ldflags '-extldflags -static' ./pkg/build/cmd"], "depends_on": [], "environment": {"CGO_ENABLED": 0}}, {"name": "verify-gen-cue", "image": "golang:1.24.4-alpine", "depends_on": [], "commands": ["# It is required that code generated from Thema/CUE be committed and in sync with its inputs.", "# The following command will fail if running code generators produces any diff in output.", "apk add --update make", "CODEGEN_VERIFY=1 make gen-cue"]}, {"name": "verify-gen-jsonnet", "image": "golang:1.24.4-alpine", "depends_on": [], "commands": ["# It is required that generated jsonnet is committed and in sync with its inputs.", "# The following command will fail if running code generators produces any diff in output.", "apk add --update make", "CODEGEN_VERIFY=1 make gen-jsonnet"]}, {"name": "yarn-install", "image": "node:22.16.0-alpine", "commands": ["yarn install --immutable || yarn install --immutable"], "depends_on": []}, {"name": "build-frontend-packages", "image": "node:22.16.0-alpine", "environment": {"NODE_OPTIONS": "--max_old_space_size=8192"}, "depends_on": ["yarn-install"], "commands": ["apk add --update jq bash", "yarn packages:build", "yarn packages:pack", "./scripts/validate-npm-packages.sh"]}, {"name": "trigger-enterprise-downstream", "image": "grafana/drone-downstream", "settings": {"server": "https://drone.grafana.net", "token": {"from_secret": "drone_token"}, "repositories": ["grafana/grafana-enterprise@${DRONE_SOURCE_BRANCH}"], "params": ["SOURCE_BUILD_NUMBER=${DRONE_COMMIT}", "SOURCE_COMMIT=${DRONE_COMMIT}", "OSS_PULL_REQUEST=${DRONE_PULL_REQUEST}"]}, "failure": "ignore"}, {"name": "rgm-package", "image": "golang:1.24.4-alpine", "pull": "always", "depends_on": ["yarn-install"], "environment": {"_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}}, "commands": ["wget -qO- https://github.com/dagger/dagger/releases/download/v0.18.8/dagger_v0.18.8_linux_amd64.tar.gz | tar zx -C /bin", "apk add docker bash", "docker run --privileged --rm tonistiigi/binfmt:qemu-v7.0.0-28 --version", "docker run --privileged --rm tonistiigi/binfmt:qemu-v7.0.0-28 --uninstall 'qemu-*'", "docker run --privileged --rm tonistiigi/binfmt:qemu-v7.0.0-28 --install all", "dagger run go run ./pkg/build/cmd artifacts -a targz:grafana:linux/amd64 -a targz:grafana:linux/arm64 -a targz:grafana:linux/arm/v7 -a docker:grafana:linux/amd64 -a docker:grafana:linux/amd64:ubuntu -a docker:grafana:linux/arm64 -a docker:grafana:linux/arm64:ubuntu -a docker:grafana:linux/arm/v7 -a docker:grafana:linux/arm/v7:ubuntu --yarn-cache=$$YARN_CACHE_FOLDER --build-id=$$DRONE_BUILD_NUMBER --ubuntu-base=ubuntu:22.04 --alpine-base=alpine:3.21.3 --tag-format='{{ .version_base }}-{{ .buildID }}-{{ .arch }}' --ubuntu-tag-format='{{ .version_base }}-{{ .buildID }}-ubuntu-{{ .arch }}' --verify='false' --grafana-dir=$$PWD > packages.txt", "find ./dist -name '*docker*.tar.gz' -type f | xargs -n1 docker load -i"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}]}, {"name": "publish-images-grafana", "image": "google/cloud-sdk:431.0.0", "environment": {"DOCKER_USER": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "GITHUB_APP_ID": "329617", "GITHUB_APP_INSTALLATION_ID": "37346161", "GITHUB_APP_PRIVATE_KEY": {"from_secret": "delivery-bot-app-private-key"}}, "commands": ["./bin/grabpl artifacts docker publish --dockerhub-repo grafana/grafana"], "depends_on": ["rgm-package"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}], "failure": "ignore"}, {"name": "build-test-plugins", "image": "node:22.16.0-alpine", "environment": {"NODE_OPTIONS": "--max_old_space_size=8192"}, "depends_on": ["yarn-install"], "commands": ["yarn e2e:plugin:build"]}, {"name": "grafana-server", "image": "alpine:3.21.3", "detach": true, "depends_on": ["rgm-package"], "environment": {"GF_SERVER_HTTP_PORT": "3001", "GF_SERVER_ROUTER_LOGGING": "1", "GF_APP_MODE": "development"}, "commands": ["apk add --update tar bash", "mkdir grafana", "tar --strip-components=1 -xvf ./dist/*amd64.tar.gz -C grafana", "cp -r devenv scripts tools grafana && cd grafana && ./scripts/grafana-server/start-server"]}, {"name": "end-to-end-tests-cloud-plugins-suite-azure", "image": "us-docker.pkg.dev/grafanalabs-dev/docker-oss-plugin-partnerships-dev/e2e-14.3.2:1.0.0", "depends_on": ["grafana-server", "github-app-generate-token"], "environment": {"CYPRESS_CI": "true", "HOST": "grafana-server", "AZURE_SP_APP_ID": {"from_secret": "azure_sp_app_id"}, "AZURE_SP_PASSWORD": {"from_secret": "azure_sp_app_pw"}, "AZURE_TENANT": {"from_secret": "azure_tenant"}}, "commands": ["GITHUB_TOKEN=$(cat /github-app/token)", "cd /", "./cpp-e2e/scripts/ci-run.sh azure ${DRONE_SOURCE_BRANCH}"], "volumes": [{"name": "github-app", "path": "/github-app"}], "when": {"repo": ["grafana/grafana"], "paths": {"include": ["pkg/tsdb/azuremonitor/**", "public/app/plugins/datasource/azuremonitor/**", "e2e/cloud-plugins-suite/azure-monitor.spec.ts"]}}}, {"environment": {"PORT": "3001", "HOST": "grafana-server", "PROV_DIR": "/grafana/scripts/grafana-server/tmp/conf/provisioning"}, "name": "playwright-plugin-e2e", "image": "node:22-bookworm", "depends_on": ["grafana-server", "build-test-plugins"], "commands": ["npx wait-on@7.0.1 http://$HOST:$PORT", "yarn playwright install --with-deps chromium", "yarn e2e:playwright"]}, {"name": "playwright-e2e-report-upload", "image": "google/cloud-sdk:431.0.0", "depends_on": ["playwright-plugin-e2e"], "failure": "ignore", "when": {"status": ["success", "failure"]}, "environment": {"GCP_GRAFANA_UPLOAD_ARTIFACTS_KEY": {"from_secret": "gcp_upload_artifacts_key"}}, "commands": ["apt-get update", "apt-get install -yq zip", "printenv GCP_GRAFANA_UPLOAD_ARTIFACTS_KEY > /tmp/gcpkey_upload_artifacts.json", "gcloud auth activate-service-account --key-file=/tmp/gcpkey_upload_artifacts.json", "gsutil cp -r ./playwright-report/. gs://releng-pipeline-artifacts-dev/${DRONE_BUILD_NUMBER}/playwright-report", "export E2E_PLAYWRIGHT_REPORT_URL=https://storage.googleapis.com/releng-pipeline-artifacts-dev/${DRONE_BUILD_NUMBER}/playwright-report/index.html", "echo \"E2E Playwright report uploaded to: \n $${E2E_PLAYWRIGHT_REPORT_URL}\""]}, {"name": "playwright-e2e-report-post-link", "image": "byrnedo/alpine-curl:0.1.8", "depends_on": ["playwright-e2e-report-upload", "github-app-generate-token"], "failure": "ignore", "when": {"status": ["success", "failure"]}, "commands": ["GITHUB_TOKEN=$(cat /github-app/token)", "if [ ! -d ./playwright-report/trace ]; then echo 'all tests passed'; exit 0; fi", "export E2E_PLAYWRIGHT_REPORT_URL=https://storage.googleapis.com/releng-pipeline-artifacts-dev/${DRONE_BUILD_NUMBER}/playwright-report/index.html", "curl -L -X POST https://api.github.com/repos/grafana/grafana/issues/${DRONE_PULL_REQUEST}/comments -H \"Accept: application/vnd.github+json\" -H \"Authorization: Bearer $${GITHUB_TOKEN}\" -H \"X-GitHub-Api-Version: 2022-11-28\" -d \"{\\\"body\\\":\\\"‚ùå Failed to run Playwright plugin e2e tests. <br /> <br /> Click [here]($${E2E_PLAYWRIGHT_REPORT_URL}) to browse the Playwright report and trace viewer. <br /> For information on how to run Playwright tests locally, refer to the [Developer guide](https://github.com/grafana/grafana/blob/main/contribute/developer-guide.md#to-run-the-playwright-tests). \\\"}\""], "volumes": [{"name": "github-app", "path": "/github-app"}]}, {"name": "e2e-tests-artifacts-upload", "image": "google/cloud-sdk:431.0.0", "depends_on": ["end-to-end-tests-cloud-plugins-suite-azure", "playwright-plugin-e2e", "github-app-generate-token"], "failure": "ignore", "when": {"status": ["success", "failure"]}, "environment": {"GCP_GRAFANA_UPLOAD_ARTIFACTS_KEY": {"from_secret": "gcp_upload_artifacts_key"}, "E2E_TEST_ARTIFACTS_BUCKET": "releng-pipeline-artifacts-dev"}, "commands": ["export GITHUB_TOKEN=$(cat /github-app/token)", "if [ -z `find ./e2e -type f -name *spec.ts.mp4` ]; then echo 'no e2e videos found from remaining tests'; exit 0; fi", "apt-get update", "apt-get install -yq zip", "printenv GCP_GRAFANA_UPLOAD_ARTIFACTS_KEY > /tmp/gcpkey_upload_artifacts.json", "gcloud auth activate-service-account --key-file=/tmp/gcpkey_upload_artifacts.json", "find ./e2e -type f -name \"*spec.ts.mp4\" | zip e2e/videos.zip -@", "gsutil cp e2e/videos.zip gs://$${E2E_TEST_ARTIFACTS_BUCKET}/${DRONE_BUILD_NUMBER}/artifacts/videos/videos.zip", "export E2E_ARTIFACTS_VIDEO_ZIP=https://storage.googleapis.com/$${E2E_TEST_ARTIFACTS_BUCKET}/${DRONE_BUILD_NUMBER}/artifacts/videos/videos.zip", "echo \"E2E Test artifacts uploaded to: $${E2E_ARTIFACTS_VIDEO_ZIP}\"", "curl -X POST https://api.github.com/repos/${DRONE_REPO}/statuses/${DRONE_COMMIT_SHA} -H \"Authorization: token $${GITHUB_TOKEN}\" -d \"{\\\"state\\\":\\\"success\\\",\\\"target_url\\\":\\\"$${E2E_ARTIFACTS_VIDEO_ZIP}\\\", \\\"description\\\": \\\"Click on the details to download e2e recording videos\\\", \\\"context\\\": \\\"e2e_artifacts\\\"}\""], "volumes": [{"name": "github-app", "path": "/github-app"}]}, {"name": "build-storybook", "image": "node:22.16.0-alpine", "depends_on": ["rgm-package", "build-frontend-packages"], "environment": {"NODE_OPTIONS": "--max_old_space_size=4096"}, "commands": ["yarn storybook:build", "./bin/build verify-storybook"], "when": {"paths": {"include": ["packages/grafana-ui/**"]}}}, {"name": "test-a11y-frontend", "image": "grafana/docker-puppeteer:1.1.0", "depends_on": ["grafana-server"], "environment": {"GRAFANA_MISC_STATS_API_KEY": {"from_secret": "grafana_misc_stats_api_key"}, "HOST": "grafana-server", "PORT": 3001, "NO_THRESHOLDS": "false"}, "failure": "always", "commands": ["npx wait-on@7.0.1 http://$HOST:$PORT", "pa11y-ci --config e2e/pa11yci.conf.js"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "github-app", "temp": {}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "pr-docs", "trigger": {"event": ["pull_request"], "repo": ["grafana/grafana"], "paths": {"include": ["*.md", "docs/**", "packages/**/*.md", "latest.json"]}}, "services": [], "steps": [{"name": "identify-runner", "image": "alpine:3.21.3", "commands": ["echo $DRONE_RUNNER_NAME"]}, {"name": "yarn-install", "image": "node:22.16.0-alpine", "commands": ["yarn install --immutable || yarn install --immutable"], "depends_on": []}, {"name": "lint-docs", "image": "node:22.16.0-alpine", "depends_on": ["yarn-install"], "environment": {"NODE_OPTIONS": "--max_old_space_size=8192"}, "commands": ["yarn run prettier:checkDocs"]}, {"name": "build-docs-website", "image": "grafana/docs-base:latest", "pull": "always", "commands": ["mkdir -p /hugo/content/docs/grafana/latest", "echo -e '---\\nredirectURL: /docs/grafana/latest/\\ntype: redirect\\nversioned: true\\n---\\n' > /hugo/content/docs/grafana/_index.md", "cp -r docs/sources/* /hugo/content/docs/grafana/latest/", "cd /hugo && make prod"]}, {"name": "verify-gen-cue", "image": "golang:1.24.4-alpine", "depends_on": [], "commands": ["# It is required that code generated from Thema/CUE be committed and in sync with its inputs.", "# The following command will fail if running code generators produces any diff in output.", "apk add --update make", "CODEGEN_VERIFY=1 make gen-cue"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "main-docs", "trigger": {"branch": "main", "event": ["push"], "repo": ["grafana/grafana"], "paths": {"include": ["*.md", "docs/**", "packages/**/*.md", "latest.json"]}}, "services": [], "steps": [{"name": "identify-runner", "image": "alpine:3.21.3", "commands": ["echo $DRONE_RUNNER_NAME"]}, {"name": "yarn-install", "image": "node:22.16.0-alpine", "commands": ["yarn install --immutable || yarn install --immutable"], "depends_on": []}, {"name": "lint-docs", "image": "node:22.16.0-alpine", "depends_on": ["yarn-install"], "environment": {"NODE_OPTIONS": "--max_old_space_size=8192"}, "commands": ["yarn run prettier:checkDocs"]}, {"name": "build-docs-website", "image": "grafana/docs-base:latest", "pull": "always", "commands": ["mkdir -p /hugo/content/docs/grafana/latest", "echo -e '---\\nredirectURL: /docs/grafana/latest/\\ntype: redirect\\nversioned: true\\n---\\n' > /hugo/content/docs/grafana/_index.md", "cp -r docs/sources/* /hugo/content/docs/grafana/latest/", "cd /hugo && make prod"]}, {"name": "verify-gen-cue", "image": "golang:1.24.4-alpine", "depends_on": [], "commands": ["# It is required that code generated from Thema/CUE be committed and in sync with its inputs.", "# The following command will fail if running code generators produces any diff in output.", "apk add --update make", "CODEGEN_VERIFY=1 make gen-cue"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "main-build-e2e-publish", "trigger": {"event": ["push"], "branch": "main", "paths": {"exclude": ["*.md", "docs/**", "latest.json"]}, "repo": ["grafana/grafana"]}, "services": [], "steps": [{"name": "github-app-generate-token", "image": "us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/github-app-secret-writer:2024-11-05-v11688112090.1-83920c59", "environment": {"GITHUB_APP_ID": {"from_secret": "github-app-app-id"}, "GITHUB_APP_INSTALLATION_ID": {"from_secret": "github-app-installation-id"}, "GITHUB_APP_PRIVATE_KEY": {"from_secret": "github-app-private-key"}}, "commands": ["echo $(/usr/bin/github-app-external-token) > /github-app/token"], "volumes": [{"name": "github-app", "path": "/github-app"}], "failure": "ignore"}, {"name": "identify-runner", "image": "alpine:3.21.3", "commands": ["echo $DRONE_RUNNER_NAME"]}, {"name": "grabpl", "image": "byrnedo/alpine-curl:0.1.8", "commands": ["mkdir -p bin", "curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v3.1.2/grabpl", "chmod +x bin/grabpl"]}, {"name": "compile-build-cmd", "image": "golang:1.24.4-alpine", "commands": ["go build -o ./bin/build -ldflags '-extldflags -static' ./pkg/build/cmd"], "depends_on": [], "environment": {"CGO_ENABLED": 0}}, {"name": "verify-gen-cue", "image": "golang:1.24.4-alpine", "depends_on": [], "commands": ["# It is required that code generated from Thema/CUE be committed and in sync with its inputs.", "# The following command will fail if running code generators produces any diff in output.", "apk add --update make", "CODEGEN_VERIFY=1 make gen-cue"]}, {"name": "verify-gen-jsonnet", "image": "golang:1.24.4-alpine", "depends_on": [], "commands": ["# It is required that generated jsonnet is committed and in sync with its inputs.", "# The following command will fail if running code generators produces any diff in output.", "apk add --update make", "CODEGEN_VERIFY=1 make gen-jsonnet"]}, {"name": "yarn-install", "image": "node:22.16.0-alpine", "commands": ["yarn install --immutable || yarn install --immutable"], "depends_on": []}, {"name": "update-package-json-version", "image": "node:22.16.0-alpine", "depends_on": ["yarn-install"], "commands": ["apk add --update jq", "new_version=$(cat package.json | jq -r .version | sed s/pre/${DRONE_BUILD_NUMBER}/g)", "echo \"New version: $new_version\"", "yarn run lerna version $new_version --exact --no-git-tag-version --no-push --force-publish -y", "yarn install --mode=update-lockfile"]}, {"name": "build-frontend-packages", "image": "node:22.16.0-alpine", "environment": {"NODE_OPTIONS": "--max_old_space_size=8192"}, "depends_on": ["yarn-install", "update-package-json-version"], "commands": ["apk add --update jq bash", "yarn packages:build", "yarn packages:pack", "./scripts/validate-npm-packages.sh"]}, {"name": "rgm-package", "image": "golang:1.24.4-alpine", "pull": "always", "depends_on": ["update-package-json-version"], "environment": {"_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}}, "commands": ["wget -qO- https://github.com/dagger/dagger/releases/download/v0.18.8/dagger_v0.18.8_linux_amd64.tar.gz | tar zx -C /bin", "apk add docker bash", "docker run --privileged --rm tonistiigi/binfmt:qemu-v7.0.0-28 --version", "docker run --privileged --rm tonistiigi/binfmt:qemu-v7.0.0-28 --uninstall 'qemu-*'", "docker run --privileged --rm tonistiigi/binfmt:qemu-v7.0.0-28 --install all", "dagger run go run ./pkg/build/cmd artifacts -a targz:grafana:linux/amd64 -a targz:grafana:linux/arm64 -a targz:grafana:linux/arm/v7 -a docker:grafana:linux/amd64 -a docker:grafana:linux/amd64:ubuntu -a docker:grafana:linux/arm64 -a docker:grafana:linux/arm64:ubuntu -a docker:grafana:linux/arm/v7 -a docker:grafana:linux/arm/v7:ubuntu --yarn-cache=$$YARN_CACHE_FOLDER --build-id=$$DRONE_BUILD_NUMBER --ubuntu-base=ubuntu:22.04 --alpine-base=alpine:3.21.3 --tag-format='{{ .version_base }}-{{ .buildID }}-{{ .arch }}' --ubuntu-tag-format='{{ .version_base }}-{{ .buildID }}-ubuntu-{{ .arch }}' --verify='false' --grafana-dir=$$PWD > packages.txt", "find ./dist -name '*docker*.tar.gz' -type f | xargs -n1 docker load -i"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}]}, {"name": "publish-images-grafana", "image": "google/cloud-sdk:431.0.0", "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads"}, "DOCKER_USER": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "GITHUB_APP_ID": "329617", "GITHUB_APP_INSTALLATION_ID": "37346161", "GITHUB_APP_PRIVATE_KEY": {"from_secret": "delivery-bot-app-private-key"}}, "commands": ["./bin/grabpl artifacts docker publish --dockerhub-repo grafana/grafana"], "depends_on": ["rgm-package"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}], "when": {"repo": ["grafana/grafana"]}}, {"name": "build-test-plugins", "image": "node:22.16.0-alpine", "environment": {"NODE_OPTIONS": "--max_old_space_size=8192"}, "depends_on": ["yarn-install"], "commands": ["yarn e2e:plugin:build"]}, {"name": "grafana-server", "image": "alpine:3.21.3", "detach": true, "depends_on": ["rgm-package"], "environment": {"GF_SERVER_HTTP_PORT": "3001", "GF_SERVER_ROUTER_LOGGING": "1", "GF_APP_MODE": "development"}, "commands": ["apk add --update tar bash", "mkdir grafana", "tar --strip-components=1 -xvf ./dist/*amd64.tar.gz -C grafana", "cp -r devenv scripts tools grafana && cd grafana && ./scripts/grafana-server/start-server"]}, {"name": "end-to-end-tests-cloud-plugins-suite-azure", "image": "us-docker.pkg.dev/grafanalabs-dev/docker-oss-plugin-partnerships-dev/e2e-14.3.2:1.0.0", "depends_on": ["grafana-server", "github-app-generate-token"], "environment": {"CYPRESS_CI": "true", "HOST": "grafana-server", "AZURE_SP_APP_ID": {"from_secret": "azure_sp_app_id"}, "AZURE_SP_PASSWORD": {"from_secret": "azure_sp_app_pw"}, "AZURE_TENANT": {"from_secret": "azure_tenant"}}, "commands": ["GITHUB_TOKEN=$(cat /github-app/token)", "cd /", "./cpp-e2e/scripts/ci-run.sh azure ${DRONE_SOURCE_BRANCH}"], "volumes": [{"name": "github-app", "path": "/github-app"}], "when": {"repo": ["grafana/grafana"], "paths": {"include": ["pkg/tsdb/azuremonitor/**", "public/app/plugins/datasource/azuremonitor/**", "e2e/cloud-plugins-suite/azure-monitor.spec.ts"]}}}, {"environment": {"PORT": "3001", "HOST": "grafana-server", "PROV_DIR": "/grafana/scripts/grafana-server/tmp/conf/provisioning"}, "name": "playwright-plugin-e2e", "image": "node:22-bookworm", "depends_on": ["grafana-server", "build-test-plugins"], "commands": ["npx wait-on@7.0.1 http://$HOST:$PORT", "yarn playwright install --with-deps chromium", "yarn e2e:playwright"]}, {"name": "playwright-e2e-report-upload", "image": "google/cloud-sdk:431.0.0", "depends_on": ["playwright-plugin-e2e"], "failure": "ignore", "when": {"status": ["success", "failure"]}, "environment": {"GCP_GRAFANA_UPLOAD_ARTIFACTS_KEY": {"from_secret": "gcp_upload_artifacts_key"}}, "commands": ["apt-get update", "apt-get install -yq zip", "printenv GCP_GRAFANA_UPLOAD_ARTIFACTS_KEY > /tmp/gcpkey_upload_artifacts.json", "gcloud auth activate-service-account --key-file=/tmp/gcpkey_upload_artifacts.json", "gsutil cp -r ./playwright-report/. gs://releng-pipeline-artifacts-dev/${DRONE_BUILD_NUMBER}/playwright-report", "export E2E_PLAYWRIGHT_REPORT_URL=https://storage.googleapis.com/releng-pipeline-artifacts-dev/${DRONE_BUILD_NUMBER}/playwright-report/index.html", "echo \"E2E Playwright report uploaded to: \n $${E2E_PLAYWRIGHT_REPORT_URL}\""]}, {"name": "playwright-e2e-report-post-link", "image": "byrnedo/alpine-curl:0.1.8", "depends_on": ["playwright-e2e-report-upload", "github-app-generate-token"], "failure": "ignore", "when": {"status": ["success", "failure"]}, "commands": ["GITHUB_TOKEN=$(cat /github-app/token)", "if [ ! -d ./playwright-report/trace ]; then echo 'all tests passed'; exit 0; fi", "export E2E_PLAYWRIGHT_REPORT_URL=https://storage.googleapis.com/releng-pipeline-artifacts-dev/${DRONE_BUILD_NUMBER}/playwright-report/index.html", "curl -L -X POST https://api.github.com/repos/grafana/grafana/issues/${DRONE_PULL_REQUEST}/comments -H \"Accept: application/vnd.github+json\" -H \"Authorization: Bearer $${GITHUB_TOKEN}\" -H \"X-GitHub-Api-Version: 2022-11-28\" -d \"{\\\"body\\\":\\\"‚ùå Failed to run Playwright plugin e2e tests. <br /> <br /> Click [here]($${E2E_PLAYWRIGHT_REPORT_URL}) to browse the Playwright report and trace viewer. <br /> For information on how to run Playwright tests locally, refer to the [Developer guide](https://github.com/grafana/grafana/blob/main/contribute/developer-guide.md#to-run-the-playwright-tests). \\\"}\""], "volumes": [{"name": "github-app", "path": "/github-app"}]}, {"name": "e2e-tests-artifacts-upload", "image": "google/cloud-sdk:431.0.0", "depends_on": ["end-to-end-tests-cloud-plugins-suite-azure", "playwright-plugin-e2e", "github-app-generate-token"], "failure": "ignore", "when": {"status": ["success", "failure"]}, "environment": {"GCP_GRAFANA_UPLOAD_ARTIFACTS_KEY": {"from_secret": "gcp_upload_artifacts_key"}, "E2E_TEST_ARTIFACTS_BUCKET": "releng-pipeline-artifacts-dev"}, "commands": ["export GITHUB_TOKEN=$(cat /github-app/token)", "if [ -z `find ./e2e -type f -name *spec.ts.mp4` ]; then echo 'no e2e videos found from remaining tests'; exit 0; fi", "apt-get update", "apt-get install -yq zip", "printenv GCP_GRAFANA_UPLOAD_ARTIFACTS_KEY > /tmp/gcpkey_upload_artifacts.json", "gcloud auth activate-service-account --key-file=/tmp/gcpkey_upload_artifacts.json", "find ./e2e -type f -name \"*spec.ts.mp4\" | zip e2e/videos.zip -@", "gsutil cp e2e/videos.zip gs://$${E2E_TEST_ARTIFACTS_BUCKET}/${DRONE_BUILD_NUMBER}/artifacts/videos/videos.zip", "export E2E_ARTIFACTS_VIDEO_ZIP=https://storage.googleapis.com/$${E2E_TEST_ARTIFACTS_BUCKET}/${DRONE_BUILD_NUMBER}/artifacts/videos/videos.zip", "echo \"E2E Test artifacts uploaded to: $${E2E_ARTIFACTS_VIDEO_ZIP}\"", "curl -X POST https://api.github.com/repos/${DRONE_REPO}/statuses/${DRONE_COMMIT_SHA} -H \"Authorization: token $${GITHUB_TOKEN}\" -d \"{\\\"state\\\":\\\"success\\\",\\\"target_url\\\":\\\"$${E2E_ARTIFACTS_VIDEO_ZIP}\\\", \\\"description\\\": \\\"Click on the details to download e2e recording videos\\\", \\\"context\\\": \\\"e2e_artifacts\\\"}\""], "volumes": [{"name": "github-app", "path": "/github-app"}]}, {"name": "build-storybook", "image": "node:22.16.0-alpine", "depends_on": ["rgm-package", "build-frontend-packages"], "environment": {"NODE_OPTIONS": "--max_old_space_size=4096"}, "commands": ["yarn storybook:build", "./bin/build verify-storybook"], "when": {"paths": {"include": ["packages/grafana-ui/**"]}}}, {"name": "test-a11y-frontend", "image": "grafana/docker-puppeteer:1.1.0", "depends_on": ["grafana-server"], "environment": {"GRAFANA_MISC_STATS_API_KEY": {"from_secret": "grafana_misc_stats_api_key"}, "HOST": "grafana-server", "PORT": 3001, "NO_THRESHOLDS": "true"}, "failure": "ignore", "commands": ["npx wait-on@7.0.1 http://$HOST:$PORT", "pa11y-ci --config e2e/pa11yci.conf.js"]}, {"name": "store-storybook", "image": "grafana/grafana-ci-deploy:1.3.3", "depends_on": ["build-storybook", "end-to-end-tests-cloud-plugins-suite-azure", "playwright-plugin-e2e"], "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads"}, "PRERELEASE_BUCKET": {"from_secret": "prerelease_bucket"}}, "commands": ["./bin/build store-storybook --deployment canary"], "when": {"repo": ["grafana/grafana"], "paths": {"include": ["packages/grafana-ui/**"]}}}, {"name": "publish-frontend-metrics", "image": "node:22.16.0-alpine", "depends_on": ["test-a11y-frontend"], "environment": {"GRAFANA_MISC_STATS_API_KEY": {"from_secret": "grafana_misc_stats_api_key"}}, "failure": "ignore", "commands": ["apk add --update bash grep git", "./scripts/ci-frontend-metrics.sh ./grafana/public/build | ./bin/build publish-metrics $$GRAFANA_MISC_STATS_API_KEY"], "when": {"repo": ["grafana/grafana"]}}, {"name": "publish-images-grafana-oss", "image": "google/cloud-sdk:431.0.0", "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads"}, "DOCKER_USER": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "GITHUB_APP_ID": "329617", "GITHUB_APP_INSTALLATION_ID": "37346161", "GITHUB_APP_PRIVATE_KEY": {"from_secret": "delivery-bot-app-private-key"}}, "commands": ["./bin/grabpl artifacts docker publish --dockerhub-repo grafana/grafana-oss"], "depends_on": ["rgm-package"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}], "when": {"repo": ["grafana/grafana"]}}, {"name": "release-canary-npm-packages", "image": "node:22.16.0-alpine", "depends_on": ["end-to-end-tests-cloud-plugins-suite-azure", "playwright-plugin-e2e", "build-frontend-packages"], "environment": {"NPM_TOKEN": {"from_secret": "npm_token"}}, "commands": ["apk add --update bash git", "./scripts/publish-npm-packages.sh --dist-tag 'canary' --registry 'https://registry.npmjs.org'"], "when": {"repo": ["grafana/grafana"], "paths": {"include": ["packages/**"]}}}, {"name": "upload-packages", "image": "grafana/grafana-ci-deploy:1.3.3", "depends_on": ["rgm-package"], "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads_base64"}, "PRERELEASE_BUCKET": {"from_secret": "prerelease_bucket"}}, "commands": ["./bin/build upload-packages --edition oss"], "when": {"repo": ["grafana/grafana"]}}, {"name": "upload-cdn-assets", "image": "grafana/grafana-ci-deploy:1.3.3", "depends_on": ["rgm-package"], "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads"}, "PRERELEASE_BUCKET": {"from_secret": "prerelease_bucket"}}, "commands": ["./bin/build upload-cdn --edition oss"], "when": {"repo": ["grafana/grafana"]}}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "github-app", "temp": {}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "main-trigger-downstream", "trigger": {"event": ["push"], "branch": "main", "paths": {"exclude": ["*.md", "docs/**", "latest.json"]}, "repo": ["grafana/grafana"]}, "services": [], "steps": [{"name": "trigger-enterprise-downstream", "image": "grafana/drone-downstream", "settings": {"server": "https://drone.grafana.net", "token": {"from_secret": "drone_token"}, "repositories": ["grafana/grafana-enterprise@main"], "params": ["SOURCE_BUILD_NUMBER=${DRONE_COMMIT}", "SOURCE_COMMIT=${DRONE_COMMIT}"]}}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": ["main-build-e2e-publish"], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "platform": {"os": "linux", "arch": "amd64"}, "name": "main-notify", "trigger": {"event": ["push"], "branch": "main", "paths": {"exclude": ["*.md", "docs/**", "latest.json"]}, "repo": ["grafana/grafana"], "status": ["failure"]}, "steps": [{"name": "slack", "image": "plugins/slack", "settings": {"webhook": {"from_secret": "slack_webhook"}, "channel": "grafana-ci-notifications", "template": "Build {{build.number}} failed for commit: \u003chttps://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 8 }}\u003e: {{build.link}}\nBranch: \u003chttps://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}\u003e\nAuthor: {{build.author}}"}}], "clone": {"retries": 3}, "depends_on": ["main-build-e2e-publish"]}
---
{"kind": "pipeline", "type": "docker", "name": "rrc-trigger-downstream", "trigger": {"ref": {"include": ["refs/tags/rrc*"]}, "branch": ["instant", "fast", "steady", "slow"]}, "services": [], "steps": [{"name": "trigger-enterprise-downstream", "image": "grafana/drone-downstream", "settings": {"server": "https://drone.grafana.net", "token": {"from_secret": "drone_token"}, "repositories": ["grafana/grafana-enterprise@${DRONE_SOURCE_BRANCH}"], "params": ["SOURCE_BUILD_NUMBER=${DRONE_COMMIT}", "SOURCE_COMMIT=${DRONE_COMMIT}", "SOURCE_TAG=${DRONE_TAG}"]}}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "publish-docker-public", "trigger": {"event": ["promote"], "target": ["public"]}, "services": [], "steps": [{"name": "identify-runner", "image": "alpine:3.21.3", "commands": ["echo $DRONE_RUNNER_NAME"]}, {"name": "grabpl", "image": "byrnedo/alpine-curl:0.1.8", "commands": ["mkdir -p bin", "curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v3.1.2/grabpl", "chmod +x bin/grabpl"]}, {"name": "compile-build-cmd", "image": "golang:1.24.4-alpine", "commands": ["go build -o ./bin/build -ldflags '-extldflags -static' ./pkg/build/cmd"], "depends_on": [], "environment": {"CGO_ENABLED": 0}}, {"name": "fetch-images", "image": "google/cloud-sdk:431.0.0", "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads"}, "DOCKER_USER": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}}, "commands": ["./bin/build artifacts docker fetch --edition oss"], "depends_on": ["compile-build-cmd"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}]}, {"environment": {"DOCKER_USER": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}}, "name": "publish-images-grafana", "image": "docker:27-cli", "depends_on": ["fetch-images"], "commands": ["apk add bash", "\n    bash -c '\n    IMAGE_TAG=$(echo \"$${TAG}\" | sed -e \"s/+/-/g\")\n    debug=\n    if [[ -n $${DRY_RUN} ]];  then debug=echo; fi\n    docker login -u $${DOCKER_USER} -p $${DOCKER_PASSWORD}\n\n    # Push the grafana-image-tags images\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-amd64\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-arm64\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-armv7\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-amd64\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-arm64\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-armv7\n\n    # Create the grafana manifests\n    $$debug docker manifest create grafana/grafana:$${IMAGE_TAG}       grafana/grafana-image-tags:$${IMAGE_TAG}-amd64       grafana/grafana-image-tags:$${IMAGE_TAG}-arm64       grafana/grafana-image-tags:$${IMAGE_TAG}-armv7\n\n    $$debug docker manifest create grafana/grafana:$${IMAGE_TAG}-ubuntu       grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-amd64       grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-arm64       grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-armv7\n\n    # Push the grafana manifests\n    $$debug docker manifest push grafana/grafana:$${IMAGE_TAG}\n    $$debug docker manifest push grafana/grafana:$${IMAGE_TAG}-ubuntu\n\n    # if LATEST is set, then also create \u0026 push latest\n    if [[ -n $${LATEST} ]]; then\n        $$debug docker manifest create grafana/grafana:latest           grafana/grafana-image-tags:$${IMAGE_TAG}-amd64           grafana/grafana-image-tags:$${IMAGE_TAG}-arm64           grafana/grafana-image-tags:$${IMAGE_TAG}-armv7\n        $$debug docker manifest create grafana/grafana:latest-ubuntu           grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-amd64           grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-arm64           grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-armv7\n\n        $$debug docker manifest push grafana/grafana:latest\n        $$debug docker manifest push grafana/grafana:latest-ubuntu\n\n    fi'"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}]}, {"name": "publish-images-grafana-oss", "image": "google/cloud-sdk:431.0.0", "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads"}, "DOCKER_USER": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "GITHUB_APP_ID": "329617", "GITHUB_APP_INSTALLATION_ID": "37346161", "GITHUB_APP_PRIVATE_KEY": {"from_secret": "delivery-bot-app-private-key"}}, "commands": ["./bin/grabpl artifacts docker publish --dockerhub-repo grafana/grafana-oss --version-tag ${DRONE_TAG}"], "depends_on": ["fetch-images"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "manually-publish-docker-public", "trigger": {"event": ["promote"], "target": ["publish-docker-public"]}, "services": [], "steps": [{"name": "identify-runner", "image": "alpine:3.21.3", "commands": ["echo $DRONE_RUNNER_NAME"]}, {"name": "grabpl", "image": "byrnedo/alpine-curl:0.1.8", "commands": ["mkdir -p bin", "curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v3.1.2/grabpl", "chmod +x bin/grabpl"]}, {"name": "compile-build-cmd", "image": "golang:1.24.4-alpine", "commands": ["go build -o ./bin/build -ldflags '-extldflags -static' ./pkg/build/cmd"], "depends_on": [], "environment": {"CGO_ENABLED": 0}}, {"name": "fetch-images", "image": "google/cloud-sdk:431.0.0", "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads"}, "DOCKER_USER": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}}, "commands": ["./bin/build artifacts docker fetch --edition oss"], "depends_on": ["compile-build-cmd"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}]}, {"environment": {"DOCKER_USER": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}}, "name": "publish-images-grafana", "image": "docker:27-cli", "depends_on": ["fetch-images"], "commands": ["apk add bash", "\n    bash -c '\n    IMAGE_TAG=$(echo \"$${TAG}\" | sed -e \"s/+/-/g\")\n    debug=\n    if [[ -n $${DRY_RUN} ]];  then debug=echo; fi\n    docker login -u $${DOCKER_USER} -p $${DOCKER_PASSWORD}\n\n    # Push the grafana-image-tags images\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-amd64\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-arm64\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-armv7\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-amd64\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-arm64\n    $$debug docker push grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-armv7\n\n    # Create the grafana manifests\n    $$debug docker manifest create grafana/grafana:$${IMAGE_TAG}       grafana/grafana-image-tags:$${IMAGE_TAG}-amd64       grafana/grafana-image-tags:$${IMAGE_TAG}-arm64       grafana/grafana-image-tags:$${IMAGE_TAG}-armv7\n\n    $$debug docker manifest create grafana/grafana:$${IMAGE_TAG}-ubuntu       grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-amd64       grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-arm64       grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-armv7\n\n    # Push the grafana manifests\n    $$debug docker manifest push grafana/grafana:$${IMAGE_TAG}\n    $$debug docker manifest push grafana/grafana:$${IMAGE_TAG}-ubuntu\n\n    # if LATEST is set, then also create \u0026 push latest\n    if [[ -n $${LATEST} ]]; then\n        $$debug docker manifest create grafana/grafana:latest           grafana/grafana-image-tags:$${IMAGE_TAG}-amd64           grafana/grafana-image-tags:$${IMAGE_TAG}-arm64           grafana/grafana-image-tags:$${IMAGE_TAG}-armv7\n        $$debug docker manifest create grafana/grafana:latest-ubuntu           grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-amd64           grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-arm64           grafana/grafana-image-tags:$${IMAGE_TAG}-ubuntu-armv7\n\n        $$debug docker manifest push grafana/grafana:latest\n        $$debug docker manifest push grafana/grafana:latest-ubuntu\n\n    fi'"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "create-release-pr", "trigger": {"event": ["promote"], "target": "release-pr"}, "services": [], "steps": [{"name": "create-release-pr", "image": "byrnedo/alpine-curl:0.1.8", "depends_on": [], "environment": {"GH_CLI_URL": "https://github.com/cli/cli/releases/download/v2.50.0/gh_2.50.0_linux_amd64.tar.gz"}, "commands": ["export GITHUB_TOKEN=$(cat /github-app/token)", "apk add perl", "v_target=`echo $${TAG} | perl -pe 's/^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/v\\1.\\2.x/'`", "curl -L $${GH_CLI_URL} | tar -xz --strip-components=1 -C /usr", "gh workflow run -f dry_run=$${DRY_RUN} -f version=$${TAG} -f target=$${v_target} -f latest=$${LATEST} --repo=grafana/grafana release-pr.yml"], "volumes": [{"name": "github-app", "path": "/github-app"}]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "github-app", "temp": {}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "publish-artifacts-public", "trigger": {"event": ["promote"], "target": ["public"]}, "services": [], "steps": [{"name": "compile-build-cmd", "image": "golang:1.24.4-alpine", "commands": ["go build -o ./bin/build -ldflags '-extldflags -static' ./pkg/build/cmd"], "depends_on": [], "environment": {"CGO_ENABLED": 0}}, {"name": "publish-artifacts", "image": "grafana/grafana-ci-deploy:1.3.3", "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads_base64"}, "PRERELEASE_BUCKET": {"from_secret": "prerelease_bucket"}}, "commands": ["./bin/build artifacts packages --artifacts-editions=oss --tag $${DRONE_TAG} --src-bucket $${PRERELEASE_BUCKET}"], "depends_on": ["compile-build-cmd"]}, {"name": "publish-storybook", "image": "grafana/grafana-ci-deploy:1.3.3", "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads_base64"}, "PRERELEASE_BUCKET": {"from_secret": "prerelease_bucket"}}, "commands": ["./bin/build artifacts storybook --tag ${DRONE_TAG}"], "depends_on": ["compile-build-cmd"]}, {"name": "github-app-generate-token", "image": "us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/github-app-secret-writer:2024-11-05-v11688112090.1-83920c59", "environment": {"GITHUB_APP_ID": {"from_secret": "github-app-app-id"}, "GITHUB_APP_INSTALLATION_ID": {"from_secret": "github-app-installation-id"}, "GITHUB_APP_PRIVATE_KEY": {"from_secret": "github-app-private-key"}}, "commands": ["echo $(/usr/bin/github-app-external-token) > /github-app/token"], "volumes": [{"name": "github-app", "path": "/github-app"}], "failure": "ignore"}, {"name": "create-release-pr", "image": "byrnedo/alpine-curl:0.1.8", "depends_on": ["publish-artifacts", "github-app-generate-token"], "environment": {"GH_CLI_URL": "https://github.com/cli/cli/releases/download/v2.50.0/gh_2.50.0_linux_amd64.tar.gz"}, "commands": ["export GITHUB_TOKEN=$(cat /github-app/token)", "apk add perl", "v_target=`echo $${TAG} | perl -pe 's/^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/v\\1.\\2.x/'`", "curl -L $${GH_CLI_URL} | tar -xz --strip-components=1 -C /usr", "gh workflow run -f dry_run=$${DRY_RUN} -f version=$${TAG} -f target=$${v_target} -f latest=$${LATEST} --repo=grafana/grafana release-pr.yml"], "volumes": [{"name": "github-app", "path": "/github-app"}]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "github-app", "temp": {}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "publish-npm-packages-public", "trigger": {"event": ["promote"], "target": ["public"]}, "services": [], "steps": [{"name": "compile-build-cmd", "image": "golang:1.24.4-alpine", "commands": ["go build -o ./bin/build -ldflags '-extldflags -static' ./pkg/build/cmd"], "depends_on": [], "environment": {"CGO_ENABLED": 0}}, {"name": "yarn-install", "image": "node:22.16.0-alpine", "commands": ["yarn install --immutable || yarn install --immutable"], "depends_on": []}, {"name": "retrieve-npm-packages", "image": "grafana/grafana-ci-deploy:1.3.3", "depends_on": ["compile-build-cmd", "yarn-install"], "failure": "ignore", "environment": {"GCP_KEY": {"from_secret": "gcp_grafanauploads_base64"}, "PRERELEASE_BUCKET": {"from_secret": "prerelease_bucket"}}, "commands": ["./bin/build artifacts npm retrieve --tag ${DRONE_TAG}"]}, {"name": "release-npm-packages", "image": "node:22.16.0-alpine", "depends_on": ["compile-build-cmd", "retrieve-npm-packages"], "failure": "ignore", "environment": {"NPM_TOKEN": {"from_secret": "npm_token"}}, "commands": ["./bin/build artifacts npm release --tag ${DRONE_TAG}"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "verify-grafanacom-artifacts", "trigger": {"event": ["promote"], "target": "verify-grafanacom-artifacts"}, "services": [], "steps": [{"name": "verify-grafanacom", "image": "node:22.16.0-alpine", "commands": ["apk add curl bash", "\n            for i in {1..5}; do\n                if ./scripts/drone/verify-grafanacom.sh; then\n                    exit 0\n                elif [ $i -eq 5 ]; then\n                    exit 1\n                else\n                    sleep 60\n                fi\n            done\n            "], "depends_on": []}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "publish-packages", "trigger": {"event": ["promote"], "target": ["public"]}, "services": [], "steps": [{"name": "compile-build-cmd", "image": "golang:1.24.4-alpine", "commands": ["go build -o ./bin/build -ldflags '-extldflags -static' ./pkg/build/cmd"], "depends_on": [], "environment": {"CGO_ENABLED": 0}}, {"name": "publish-linux-packages-deb", "image": "us.gcr.io/kubernetes-dev/package-publish:latest", "depends_on": ["compile-build-cmd"], "privileged": true, "settings": {"access_key_id": {"from_secret": "packages_access_key_id"}, "secret_access_key": {"from_secret": "packages_secret_access_key"}, "service_account_json": {"from_secret": "packages_service_account"}, "target_bucket": "grafana-packages", "deb_distribution": "auto", "gpg_passphrase": {"from_secret": "packages_gpg_passphrase"}, "gpg_public_key": {"from_secret": "packages_gpg_public_key"}, "gpg_private_key": {"from_secret": "packages_gpg_private_key"}, "package_path": "gs://grafana-prerelease/artifacts/downloads/*${DRONE_TAG}/oss/**.deb"}}, {"name": "publish-linux-packages-rpm", "image": "us.gcr.io/kubernetes-dev/package-publish:latest", "depends_on": ["compile-build-cmd"], "privileged": true, "settings": {"access_key_id": {"from_secret": "packages_access_key_id"}, "secret_access_key": {"from_secret": "packages_secret_access_key"}, "service_account_json": {"from_secret": "packages_service_account"}, "target_bucket": "grafana-packages", "deb_distribution": "auto", "gpg_passphrase": {"from_secret": "packages_gpg_passphrase"}, "gpg_public_key": {"from_secret": "packages_gpg_public_key"}, "gpg_private_key": {"from_secret": "packages_gpg_private_key"}, "package_path": "gs://grafana-prerelease/artifacts/downloads/*${DRONE_TAG}/oss/**.rpm"}}, {"name": "publish-grafanacom", "image": "grafana/grafana-ci-deploy:1.3.3", "depends_on": ["publish-linux-packages-deb", "publish-linux-packages-rpm"], "environment": {"GRAFANA_COM_API_KEY": {"from_secret": "grafana_api_key"}, "GCP_KEY": {"from_secret": "gcp_grafanauploads_base64"}}, "commands": ["./bin/build publish grafana-com --edition oss ${DRONE_TAG}"]}, {"name": "verify-grafanacom", "image": "node:22.16.0-alpine", "commands": ["apk add curl bash", "\n            for i in {1..5}; do\n                if ./scripts/drone/verify-grafanacom.sh; then\n                    exit 0\n                elif [ $i -eq 5 ]; then\n                    exit 1\n                else\n                    sleep 60\n                fi\n            done\n            "], "depends_on": ["publish-grafanacom"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": ["publish-artifacts-public", "publish-docker-public"], "image_pull_secrets": ["gcr", "gar"], "environment": {"EDITION": "oss"}, "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "publish-grafanacom", "trigger": {"event": ["promote"], "target": "publish-grafanacom"}, "services": [], "steps": [{"name": "compile-build-cmd", "image": "golang:1.24.4-alpine", "commands": ["go build -o ./bin/build -ldflags '-extldflags -static' ./pkg/build/cmd"], "depends_on": [], "environment": {"CGO_ENABLED": 0}}, {"name": "publish-grafanacom", "image": "grafana/grafana-ci-deploy:1.3.3", "depends_on": ["compile-build-cmd"], "environment": {"GRAFANA_COM_API_KEY": {"from_secret": "grafana_api_key"}, "GCP_KEY": {"from_secret": "gcp_grafanauploads_base64"}}, "commands": ["./bin/build publish grafana-com --edition oss ${DRONE_TAG}"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "rgm-main-prerelease", "trigger": {"event": ["push"], "branch": "main", "paths": {"exclude": ["*.md", "docs/**", "packages/**/*.md", "latest.json"]}, "repo": ["grafana/grafana"]}, "services": [], "steps": [{"name": "rgm-build", "image": "golang:1.24.4-alpine", "pull": "always", "commands": ["wget -qO- https://github.com/dagger/dagger/releases/download/v0.18.8/dagger_v0.18.8_linux_amd64.tar.gz | tar zx -C /bin", "apk add docker bash", "export GRAFANA_DIR=$$(pwd)", "export GITHUB_TOKEN=$(cat /github-app/token)", "./pkg/build/daggerbuild/scripts/drone_build_main.sh"], "environment": {"ALPINE_BASE": "alpine:3.21.3", "UBUNTU_BASE": "ubuntu:22.04", "DESTINATION": {"from_secret": "destination"}, "STORYBOOK_DESTINATION": {"from_secret": "rgm_storybook_destination"}, "CDN_DESTINATION": {"from_secret": "rgm_cdn_destination"}, "DOWNLOADS_DESTINATION": {"from_secret": "rgm_downloads_destination"}, "GCP_KEY_BASE64": {"from_secret": "gcp_key_base64"}, "_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}, "GPG_PRIVATE_KEY": {"from_secret": "packages_gpg_private_key"}, "GPG_PUBLIC_KEY": {"from_secret": "packages_gpg_public_key"}, "GPG_PASSPHRASE": {"from_secret": "packages_gpg_passphrase"}, "DOCKER_USERNAME": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "NPM_TOKEN": {"from_secret": "npm_token"}, "GCOM_API_KEY": {"from_secret": "grafana_api_key"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "github-app", "path": "/github-app"}]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "rgm-tag-prerelease", "trigger": {"event": {"exclude": ["promote"]}, "ref": {"include": ["refs/tags/v*"], "exclude": ["refs/tags/*-cloud*"]}}, "services": [], "steps": [{"name": "github-app-generate-token", "image": "us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/github-app-secret-writer:2024-11-05-v11688112090.1-83920c59", "environment": {"GITHUB_APP_ID": {"from_secret": "github-app-app-id"}, "GITHUB_APP_INSTALLATION_ID": {"from_secret": "github-app-installation-id"}, "GITHUB_APP_PRIVATE_KEY": {"from_secret": "github-app-private-key"}}, "commands": ["echo $(/usr/bin/github-app-external-token) > /github-app/token"], "volumes": [{"name": "github-app", "path": "/github-app"}], "failure": "ignore"}, {"name": "rgm-build", "image": "golang:1.24.4-alpine", "pull": "always", "commands": ["wget -qO- https://github.com/dagger/dagger/releases/download/v0.18.8/dagger_v0.18.8_linux_amd64.tar.gz | tar zx -C /bin", "apk add docker bash", "export GRAFANA_DIR=$$(pwd)", "export GITHUB_TOKEN=$(cat /github-app/token)", "./pkg/build/daggerbuild/scripts/drone_build_tag_grafana.sh"], "environment": {"ALPINE_BASE": "alpine:3.21.3", "UBUNTU_BASE": "ubuntu:22.04", "DESTINATION": {"from_secret": "destination"}, "STORYBOOK_DESTINATION": {"from_secret": "rgm_storybook_destination"}, "CDN_DESTINATION": {"from_secret": "rgm_cdn_destination"}, "DOWNLOADS_DESTINATION": {"from_secret": "rgm_downloads_destination"}, "GCP_KEY_BASE64": {"from_secret": "gcp_key_base64"}, "_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}, "GPG_PRIVATE_KEY": {"from_secret": "packages_gpg_private_key"}, "GPG_PUBLIC_KEY": {"from_secret": "packages_gpg_public_key"}, "GPG_PASSPHRASE": {"from_secret": "packages_gpg_passphrase"}, "DOCKER_USERNAME": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "NPM_TOKEN": {"from_secret": "npm_token"}, "GCOM_API_KEY": {"from_secret": "grafana_api_key"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "github-app", "path": "/github-app"}], "depends_on": ["github-app-generate-token"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "github-app", "path": "/github-app"}, {"name": "github-app", "temp": {}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "rgm-tag-verify-prerelease-assets", "trigger": {"event": {"exclude": ["promote"]}, "ref": {"include": ["refs/tags/v*"], "exclude": ["refs/tags/*-cloud*"]}}, "services": [], "steps": [{"name": "gsutil-stat", "depends_on": ["clone"], "image": "google/cloud-sdk:431.0.0", "environment": {"BUCKET": "grafana-prerelease", "GCP_KEY": {"from_secret": "gcp_key_base64"}}, "commands": ["apt-get update && apt-get install -yq gettext", "printenv GCP_KEY | base64 -d > /tmp/key.json", "gcloud auth activate-service-account --key-file=/tmp/key.json", "./scripts/list-release-artifacts.sh ${DRONE_TAG} | xargs -n1 gsutil stat >> /tmp/stat.log", "! cat /tmp/stat.log | grep \"No URLs matched\""]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": ["rgm-tag-prerelease"], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "rgm-version-branch-prerelease", "trigger": {"ref": ["refs/heads/v[0-9]*"]}, "services": [], "steps": [{"name": "rgm-build", "image": "golang:1.24.4-alpine", "pull": "always", "commands": ["wget -qO- https://github.com/dagger/dagger/releases/download/v0.18.8/dagger_v0.18.8_linux_amd64.tar.gz | tar zx -C /bin", "apk add docker bash", "export GRAFANA_DIR=$$(pwd)", "export GITHUB_TOKEN=$(cat /github-app/token)", "./pkg/build/daggerbuild/scripts/drone_build_tag_grafana.sh"], "environment": {"ALPINE_BASE": "alpine:3.21.3", "UBUNTU_BASE": "ubuntu:22.04", "DESTINATION": {"from_secret": "destination"}, "STORYBOOK_DESTINATION": {"from_secret": "rgm_storybook_destination"}, "CDN_DESTINATION": {"from_secret": "rgm_cdn_destination"}, "DOWNLOADS_DESTINATION": {"from_secret": "rgm_downloads_destination"}, "GCP_KEY_BASE64": {"from_secret": "gcp_key_base64"}, "_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}, "GPG_PRIVATE_KEY": {"from_secret": "packages_gpg_private_key"}, "GPG_PUBLIC_KEY": {"from_secret": "packages_gpg_public_key"}, "GPG_PASSPHRASE": {"from_secret": "packages_gpg_passphrase"}, "DOCKER_USERNAME": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "NPM_TOKEN": {"from_secret": "npm_token"}, "GCOM_API_KEY": {"from_secret": "grafana_api_key"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "github-app", "path": "/github-app"}]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "rgm-prerelease-verify-prerelease-assets", "trigger": {"ref": ["refs/heads/v[0-9]*"]}, "services": [], "steps": [{"name": "gsutil-stat", "depends_on": ["clone"], "image": "google/cloud-sdk:431.0.0", "environment": {"BUCKET": "grafana-prerelease", "GCP_KEY": {"from_secret": "gcp_key_base64"}}, "commands": ["apt-get update && apt-get install -yq gettext", "printenv GCP_KEY | base64 -d > /tmp/key.json", "gcloud auth activate-service-account --key-file=/tmp/key.json", "./scripts/list-release-artifacts.sh ${DRONE_TAG} | xargs -n1 gsutil stat >> /tmp/stat.log", "! cat /tmp/stat.log | grep \"No URLs matched\""]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": ["rgm-version-branch-prerelease"], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "rgm-nightly-build", "trigger": {"event": {"include": ["cron"]}, "cron": {"include": ["nightly-release"]}}, "services": [], "steps": [{"name": "rgm-build", "image": "golang:1.24.4-alpine", "pull": "always", "commands": ["wget -qO- https://github.com/dagger/dagger/releases/download/v0.18.8/dagger_v0.18.8_linux_amd64.tar.gz | tar zx -C /bin", "apk add docker bash", "export GRAFANA_DIR=$$(pwd)", "export GITHUB_TOKEN=$(cat /github-app/token)", "./pkg/build/daggerbuild/scripts/drone_build_nightly_grafana.sh"], "environment": {"ALPINE_BASE": "alpine:3.21.3", "UBUNTU_BASE": "ubuntu:22.04", "DESTINATION": {"from_secret": "destination"}, "STORYBOOK_DESTINATION": {"from_secret": "rgm_storybook_destination"}, "CDN_DESTINATION": {"from_secret": "rgm_cdn_destination"}, "DOWNLOADS_DESTINATION": {"from_secret": "rgm_downloads_destination"}, "GCP_KEY_BASE64": {"from_secret": "gcp_key_base64"}, "_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}, "GPG_PRIVATE_KEY": {"from_secret": "packages_gpg_private_key"}, "GPG_PUBLIC_KEY": {"from_secret": "packages_gpg_public_key"}, "GPG_PASSPHRASE": {"from_secret": "packages_gpg_passphrase"}, "DOCKER_USERNAME": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "NPM_TOKEN": {"from_secret": "npm_token"}, "GCOM_API_KEY": {"from_secret": "grafana_api_key"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "github-app", "path": "/github-app"}]}, {"name": "rgm-copy", "image": "google/cloud-sdk:alpine", "commands": ["mkdir -p $${DESTINATION}/$${DRONE_BUILD_EVENT}", "printenv GCP_KEY_BASE64 | base64 -d > /tmp/key.json", "gcloud auth activate-service-account --key-file=/tmp/key.json", "gcloud storage cp -r $${DRONE_WORKSPACE}/dist/* $${DESTINATION}/$${DRONE_BUILD_EVENT}"], "environment": {"DESTINATION": {"from_secret": "destination"}, "STORYBOOK_DESTINATION": {"from_secret": "rgm_storybook_destination"}, "CDN_DESTINATION": {"from_secret": "rgm_cdn_destination"}, "DOWNLOADS_DESTINATION": {"from_secret": "rgm_downloads_destination"}, "GCP_KEY_BASE64": {"from_secret": "gcp_key_base64"}, "_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}, "GPG_PRIVATE_KEY": {"from_secret": "packages_gpg_private_key"}, "GPG_PUBLIC_KEY": {"from_secret": "packages_gpg_public_key"}, "GPG_PASSPHRASE": {"from_secret": "packages_gpg_passphrase"}, "DOCKER_USERNAME": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "NPM_TOKEN": {"from_secret": "npm_token"}, "GCOM_API_KEY": {"from_secret": "grafana_api_key"}}, "depends_on": ["rgm-build"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "rgm-nightly-publish", "trigger": {"event": {"include": ["cron"]}, "cron": {"include": ["nightly-release"]}}, "services": [], "steps": [{"name": "rgm-copy", "image": "google/cloud-sdk:alpine", "commands": ["mkdir -p $${DRONE_WORKSPACE}/dist", "printenv GCP_KEY_BASE64 | base64 -d > /tmp/key.json", "gcloud auth activate-service-account --key-file=/tmp/key.json", "gcloud storage cp -r $${DESTINATION}/$${DRONE_BUILD_EVENT}/*_$${DRONE_BUILD_NUMBER}_* $${DRONE_WORKSPACE}/dist"], "environment": {"DESTINATION": {"from_secret": "destination"}, "STORYBOOK_DESTINATION": {"from_secret": "rgm_storybook_destination"}, "CDN_DESTINATION": {"from_secret": "rgm_cdn_destination"}, "DOWNLOADS_DESTINATION": {"from_secret": "rgm_downloads_destination"}, "GCP_KEY_BASE64": {"from_secret": "gcp_key_base64"}, "_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}, "GPG_PRIVATE_KEY": {"from_secret": "packages_gpg_private_key"}, "GPG_PUBLIC_KEY": {"from_secret": "packages_gpg_public_key"}, "GPG_PASSPHRASE": {"from_secret": "packages_gpg_passphrase"}, "DOCKER_USERNAME": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "NPM_TOKEN": {"from_secret": "npm_token"}, "GCOM_API_KEY": {"from_secret": "grafana_api_key"}}}, {"name": "rgm-publish", "image": "golang:1.24.4-alpine", "pull": "always", "commands": ["wget -qO- https://github.com/dagger/dagger/releases/download/v0.18.8/dagger_v0.18.8_linux_amd64.tar.gz | tar zx -C /bin", "apk add docker bash", "export GRAFANA_DIR=$$(pwd)", "export GITHUB_TOKEN=$(cat /github-app/token)", "./pkg/build/daggerbuild/scripts/drone_publish_nightly_grafana.sh"], "environment": {"ALPINE_BASE": "alpine:3.21.3", "UBUNTU_BASE": "ubuntu:22.04", "DESTINATION": {"from_secret": "destination"}, "STORYBOOK_DESTINATION": {"from_secret": "rgm_storybook_destination"}, "CDN_DESTINATION": {"from_secret": "rgm_cdn_destination"}, "DOWNLOADS_DESTINATION": {"from_secret": "rgm_downloads_destination"}, "GCP_KEY_BASE64": {"from_secret": "gcp_key_base64"}, "_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}, "GPG_PRIVATE_KEY": {"from_secret": "packages_gpg_private_key"}, "GPG_PUBLIC_KEY": {"from_secret": "packages_gpg_public_key"}, "GPG_PASSPHRASE": {"from_secret": "packages_gpg_passphrase"}, "DOCKER_USERNAME": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "NPM_TOKEN": {"from_secret": "npm_token"}, "GCOM_API_KEY": {"from_secret": "grafana_api_key"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "github-app", "path": "/github-app"}], "depends_on": ["rgm-copy"]}, {"name": "publish-deb", "image": "us.gcr.io/kubernetes-dev/package-publish:latest", "privileged": true, "settings": {"access_key_id": {"from_secret": "packages_access_key_id"}, "secret_access_key": {"from_secret": "packages_secret_access_key"}, "service_account_json": {"from_secret": "packages_service_account"}, "target_bucket": "grafana-packages", "gpg_passphrase": {"from_secret": "packages_gpg_passphrase"}, "gpg_public_key": {"from_secret": "packages_gpg_public_key"}, "gpg_private_key": {"from_secret": "packages_gpg_private_key"}, "package_path": "file:///drone/src/dist/*.deb"}, "depends_on": ["rgm-publish"]}, {"name": "publish-rpm", "image": "us.gcr.io/kubernetes-dev/package-publish:latest", "privileged": true, "settings": {"access_key_id": {"from_secret": "packages_access_key_id"}, "secret_access_key": {"from_secret": "packages_secret_access_key"}, "service_account_json": {"from_secret": "packages_service_account"}, "target_bucket": "grafana-packages", "gpg_passphrase": {"from_secret": "packages_gpg_passphrase"}, "gpg_public_key": {"from_secret": "packages_gpg_public_key"}, "gpg_private_key": {"from_secret": "packages_gpg_private_key"}, "package_path": "file:///drone/src/dist/*.rpm"}, "depends_on": ["rgm-publish"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}], "depends_on": ["rgm-nightly-build"], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "name": "rgm-promotion", "trigger": {"event": ["promote"], "target": "upload-packages"}, "services": [], "steps": [{"name": "github-app-generate-token", "image": "us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/github-app-secret-writer:2024-11-05-v11688112090.1-83920c59", "environment": {"GITHUB_APP_ID": {"from_secret": "github-app-app-id"}, "GITHUB_APP_INSTALLATION_ID": {"from_secret": "github-app-installation-id"}, "GITHUB_APP_PRIVATE_KEY": {"from_secret": "github-app-private-key"}}, "commands": ["echo $(/usr/bin/github-app-external-token) > /github-app/token"], "volumes": [{"name": "github-app", "path": "/github-app"}], "failure": "ignore"}, {"name": "rgm-build", "image": "golang:1.24.4-alpine", "pull": "always", "commands": ["wget -qO- https://github.com/dagger/dagger/releases/download/v0.18.8/dagger_v0.18.8_linux_amd64.tar.gz | tar zx -C /bin", "apk add docker bash", "export GITHUB_TOKEN=$(cat /github-app/token)", "dagger run --silent go run ./pkg/build/cmd artifacts -a $${ARTIFACTS} --grafana-ref=$${GRAFANA_REF} --enterprise-ref=$${ENTERPRISE_REF} --grafana-repo=$${GRAFANA_REPO} --build-id=$${DRONE_BUILD_NUMBER} --version=$${VERSION}"], "environment": {"ALPINE_BASE": "alpine:3.21.3", "UBUNTU_BASE": "ubuntu:22.04", "DESTINATION": {"from_secret": "destination"}, "STORYBOOK_DESTINATION": {"from_secret": "rgm_storybook_destination"}, "CDN_DESTINATION": {"from_secret": "rgm_cdn_destination"}, "DOWNLOADS_DESTINATION": {"from_secret": "rgm_downloads_destination"}, "GCP_KEY_BASE64": {"from_secret": "gcp_key_base64"}, "_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}, "GPG_PRIVATE_KEY": {"from_secret": "packages_gpg_private_key"}, "GPG_PUBLIC_KEY": {"from_secret": "packages_gpg_public_key"}, "GPG_PASSPHRASE": {"from_secret": "packages_gpg_passphrase"}, "DOCKER_USERNAME": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "NPM_TOKEN": {"from_secret": "npm_token"}, "GCOM_API_KEY": {"from_secret": "grafana_api_key"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "github-app", "path": "/github-app"}], "depends_on": ["github-app-generate-token"]}, {"name": "rgm-copy", "image": "google/cloud-sdk:alpine", "commands": ["printenv GCP_KEY_BASE64 | base64 -d > /tmp/key.json", "gcloud auth activate-service-account --key-file=/tmp/key.json", "gcloud storage cp -r dist/* $${UPLOAD_TO}"], "environment": {"DESTINATION": {"from_secret": "destination"}, "STORYBOOK_DESTINATION": {"from_secret": "rgm_storybook_destination"}, "CDN_DESTINATION": {"from_secret": "rgm_cdn_destination"}, "DOWNLOADS_DESTINATION": {"from_secret": "rgm_downloads_destination"}, "GCP_KEY_BASE64": {"from_secret": "gcp_key_base64"}, "_EXPERIMENTAL_DAGGER_CLOUD_TOKEN": {"from_secret": "dagger_token"}, "GPG_PRIVATE_KEY": {"from_secret": "packages_gpg_private_key"}, "GPG_PUBLIC_KEY": {"from_secret": "packages_gpg_public_key"}, "GPG_PASSPHRASE": {"from_secret": "packages_gpg_passphrase"}, "DOCKER_USERNAME": {"from_secret": "docker_username"}, "DOCKER_PASSWORD": {"from_secret": "docker_password"}, "NPM_TOKEN": {"from_secret": "npm_token"}, "GCOM_API_KEY": {"from_secret": "grafana_api_key"}}, "depends_on": ["rgm-build"]}], "clone": {"retries": 3}, "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "github-app", "path": "/github-app"}, {"name": "github-app", "temp": {}}], "depends_on": [], "image_pull_secrets": ["gcr", "gar"], "platform": {"os": "linux", "arch": "amd64"}, "node": {"type": "no-parallel"}}
---
{"kind": "pipeline", "type": "docker", "platform": {"os": "linux", "arch": "amd64"}, "name": "scan-grafana/grafana:latest-image", "trigger": {"event": "cron", "cron": "nightly"}, "clone": {"retries": 3}, "steps": [{"name": "authenticate-gcr", "image": "docker:dind", "commands": ["echo $${GCR_CREDENTIALS} | docker login -u _json_key --password-stdin https://us.gcr.io"], "environment": {"GCR_CREDENTIALS": {"from_secret": "gcr_credentials"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "scan-unknown-low-medium-vulnerabilities", "image": "aquasec/trivy:0.21.0", "commands": ["trivy image --exit-code 0 --severity UNKNOWN,LOW,MEDIUM grafana/grafana:latest"], "depends_on": ["authenticate-gcr"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "scan-high-critical-vulnerabilities", "image": "aquasec/trivy:0.21.0", "commands": ["trivy image --exit-code 1 --severity HIGH,CRITICAL grafana/grafana:latest"], "depends_on": ["authenticate-gcr"], "environment": {"GOOGLE_APPLICATION_CREDENTIALS": {"from_secret": "gcr_credentials_json"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "slack-notify-failure", "image": "plugins/slack", "settings": {"webhook": {"from_secret": "slack_webhook_backend"}, "channel": "grafana-backend-ops", "template": "Nightly docker image scan job for grafana/grafana:latest failed: {{build.link}}"}, "when": {"status": "failure"}}], "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "config", "temp": {}}]}
---
{"kind": "pipeline", "type": "docker", "platform": {"os": "linux", "arch": "amd64"}, "name": "scan-grafana/grafana:main-image", "trigger": {"event": "cron", "cron": "nightly"}, "clone": {"retries": 3}, "steps": [{"name": "authenticate-gcr", "image": "docker:dind", "commands": ["echo $${GCR_CREDENTIALS} | docker login -u _json_key --password-stdin https://us.gcr.io"], "environment": {"GCR_CREDENTIALS": {"from_secret": "gcr_credentials"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "scan-unknown-low-medium-vulnerabilities", "image": "aquasec/trivy:0.21.0", "commands": ["trivy image --exit-code 0 --severity UNKNOWN,LOW,MEDIUM grafana/grafana:main"], "depends_on": ["authenticate-gcr"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "scan-high-critical-vulnerabilities", "image": "aquasec/trivy:0.21.0", "commands": ["trivy image --exit-code 1 --severity HIGH,CRITICAL grafana/grafana:main"], "depends_on": ["authenticate-gcr"], "environment": {"GOOGLE_APPLICATION_CREDENTIALS": {"from_secret": "gcr_credentials_json"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "slack-notify-failure", "image": "plugins/slack", "settings": {"webhook": {"from_secret": "slack_webhook_backend"}, "channel": "grafana-backend-ops", "template": "Nightly docker image scan job for grafana/grafana:main failed: {{build.link}}"}, "when": {"status": "failure"}}], "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "config", "temp": {}}]}
---
{"kind": "pipeline", "type": "docker", "platform": {"os": "linux", "arch": "amd64"}, "name": "scan-grafana/grafana:latest-ubuntu-image", "trigger": {"event": "cron", "cron": "nightly"}, "clone": {"retries": 3}, "steps": [{"name": "authenticate-gcr", "image": "docker:dind", "commands": ["echo $${GCR_CREDENTIALS} | docker login -u _json_key --password-stdin https://us.gcr.io"], "environment": {"GCR_CREDENTIALS": {"from_secret": "gcr_credentials"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "scan-unknown-low-medium-vulnerabilities", "image": "aquasec/trivy:0.21.0", "commands": ["trivy image --exit-code 0 --severity UNKNOWN,LOW,MEDIUM grafana/grafana:latest-ubuntu"], "depends_on": ["authenticate-gcr"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "scan-high-critical-vulnerabilities", "image": "aquasec/trivy:0.21.0", "commands": ["trivy image --exit-code 1 --severity HIGH,CRITICAL grafana/grafana:latest-ubuntu"], "depends_on": ["authenticate-gcr"], "environment": {"GOOGLE_APPLICATION_CREDENTIALS": {"from_secret": "gcr_credentials_json"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "slack-notify-failure", "image": "plugins/slack", "settings": {"webhook": {"from_secret": "slack_webhook_backend"}, "channel": "grafana-backend-ops", "template": "Nightly docker image scan job for grafana/grafana:latest-ubuntu failed: {{build.link}}"}, "when": {"status": "failure"}}], "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "config", "temp": {}}]}
---
{"kind": "pipeline", "type": "docker", "platform": {"os": "linux", "arch": "amd64"}, "name": "scan-grafana/grafana:main-ubuntu-image", "trigger": {"event": "cron", "cron": "nightly"}, "clone": {"retries": 3}, "steps": [{"name": "authenticate-gcr", "image": "docker:dind", "commands": ["echo $${GCR_CREDENTIALS} | docker login -u _json_key --password-stdin https://us.gcr.io"], "environment": {"GCR_CREDENTIALS": {"from_secret": "gcr_credentials"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "scan-unknown-low-medium-vulnerabilities", "image": "aquasec/trivy:0.21.0", "commands": ["trivy image --exit-code 0 --severity UNKNOWN,LOW,MEDIUM grafana/grafana:main-ubuntu"], "depends_on": ["authenticate-gcr"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "scan-high-critical-vulnerabilities", "image": "aquasec/trivy:0.21.0", "commands": ["trivy image --exit-code 1 --severity HIGH,CRITICAL grafana/grafana:main-ubuntu"], "depends_on": ["authenticate-gcr"], "environment": {"GOOGLE_APPLICATION_CREDENTIALS": {"from_secret": "gcr_credentials_json"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "slack-notify-failure", "image": "plugins/slack", "settings": {"webhook": {"from_secret": "slack_webhook_backend"}, "channel": "grafana-backend-ops", "template": "Nightly docker image scan job for grafana/grafana:main-ubuntu failed: {{build.link}}"}, "when": {"status": "failure"}}], "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "config", "temp": {}}]}
---
{"kind": "pipeline", "type": "docker", "platform": {"os": "linux", "arch": "amd64"}, "name": "scan-build-test-and-publish-docker-images", "trigger": {"event": "cron", "cron": "nightly"}, "clone": {"retries": 3}, "steps": [{"name": "authenticate-gcr", "image": "docker:dind", "commands": ["echo $${GCR_CREDENTIALS} | docker login -u _json_key --password-stdin https://us.gcr.io"], "environment": {"GCR_CREDENTIALS": {"from_secret": "gcr_credentials"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "scan-unknown-low-medium-vulnerabilities", "image": "aquasec/trivy:0.21.0", "commands": ["trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM docker:27-cli", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM alpine/git:2.40.1", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM golang:1.24.4-alpine", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM node:22.16.0-alpine", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM node:22-bookworm", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM google/cloud-sdk:431.0.0", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM grafana/grafana-ci-deploy:1.3.3", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM alpine:3.21.3", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM ubuntu:22.04", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM byrnedo/alpine-curl:0.1.8", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM plugins/slack", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM us.gcr.io/kubernetes-dev/package-publish:latest", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM grafana/drone-downstream", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM grafana/docker-puppeteer:1.1.0", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM grafana/docs-base:latest", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM cypress/included:14.3.2", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM jwilder/dockerize:0.6.1", "trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/github-app-secret-writer:2024-11-05-v11688112090.1-83920c59"], "depends_on": ["authenticate-gcr"], "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "scan-high-critical-vulnerabilities", "image": "aquasec/trivy:0.21.0", "commands": ["trivy --exit-code 1 --severity HIGH,CRITICAL docker:27-cli", "trivy --exit-code 1 --severity HIGH,CRITICAL alpine/git:2.40.1", "trivy --exit-code 1 --severity HIGH,CRITICAL golang:1.24.4-alpine", "trivy --exit-code 1 --severity HIGH,CRITICAL node:22.16.0-alpine", "trivy --exit-code 1 --severity HIGH,CRITICAL node:22-bookworm", "trivy --exit-code 1 --severity HIGH,CRITICAL google/cloud-sdk:431.0.0", "trivy --exit-code 1 --severity HIGH,CRITICAL grafana/grafana-ci-deploy:1.3.3", "trivy --exit-code 1 --severity HIGH,CRITICAL alpine:3.21.3", "trivy --exit-code 1 --severity HIGH,CRITICAL ubuntu:22.04", "trivy --exit-code 1 --severity HIGH,CRITICAL byrnedo/alpine-curl:0.1.8", "trivy --exit-code 1 --severity HIGH,CRITICAL plugins/slack", "trivy --exit-code 1 --severity HIGH,CRITICAL us.gcr.io/kubernetes-dev/package-publish:latest", "trivy --exit-code 1 --severity HIGH,CRITICAL grafana/drone-downstream", "trivy --exit-code 1 --severity HIGH,CRITICAL grafana/docker-puppeteer:1.1.0", "trivy --exit-code 1 --severity HIGH,CRITICAL grafana/docs-base:latest", "trivy --exit-code 1 --severity HIGH,CRITICAL cypress/included:14.3.2", "trivy --exit-code 1 --severity HIGH,CRITICAL jwilder/dockerize:0.6.1", "trivy --exit-code 1 --severity HIGH,CRITICAL us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/github-app-secret-writer:2024-11-05-v11688112090.1-83920c59"], "depends_on": ["authenticate-gcr"], "environment": {"GOOGLE_APPLICATION_CREDENTIALS": {"from_secret": "gcr_credentials_json"}}, "volumes": [{"name": "docker", "path": "/var/run/docker.sock"}, {"name": "config", "path": "/root/.docker/"}]}, {"name": "slack-notify-failure", "image": "plugins/slack", "settings": {"webhook": {"from_secret": "slack_webhook_backend"}, "channel": "grafana-backend-ops", "template": "Nightly docker image scan job for build-images failed: {{build.link}}"}, "when": {"status": "failure"}}], "volumes": [{"name": "docker", "host": {"path": "/var/run/docker.sock"}}, {"name": "config", "temp": {}}]}
---
{"kind": "secret", "name": "github-app-app-id", "get": {"path": "ci/data/repo/grafana/grafana/github-app", "name": "app-id"}}
---
{"kind": "secret", "name": "github-app-installation-id", "get": {"path": "ci/data/repo/grafana/grafana/github-app", "name": "app-installation-id"}}
---
{"kind": "secret", "name": "github-app-private-key", "get": {"path": "ci/data/repo/grafana/grafana/github-app", "name": "private-key"}}
---
{"kind": "secret", "name": "gcp_grafanauploads", "get": {"path": "infra/data/ci/grafana-release-eng/grafanauploads", "name": "credentials.json"}}
---
{"kind": "secret", "name": "gcp_grafanauploads_base64", "get": {"path": "infra/data/ci/grafana-release-eng/grafanauploads", "name": "credentials_base64"}}
---
{"kind": "secret", "name": "grafana_api_key", "get": {"path": "infra/data/ci/grafana-release-eng/grafanacom", "name": "api_key"}}
---
{"kind": "secret", "name": "gcr", "get": {"path": "secret/data/common/gcr", "name": ".dockerconfigjson"}}
---
{"kind": "secret", "name": "gar", "get": {"path": "secret/data/common/gar", "name": ".dockerconfigjson"}}
---
{"kind": "secret", "name": "drone_token", "get": {"path": "infra/data/ci/drone", "name": "machine-user-token"}}
---
{"kind": "secret", "name": "prerelease_bucket", "get": {"path": "infra/data/ci/grafana/prerelease", "name": "bucket"}}
---
{"kind": "secret", "name": "docker_username", "get": {"path": "ci/data/common/dockerhub", "name": "username"}}
---
{"kind": "secret", "name": "docker_password", "get": {"path": "ci/data/common/dockerhub", "name": "password"}}
---
{"kind": "secret", "name": "gcp_upload_artifacts_key", "get": {"path": "infra/data/ci/grafana/releng/artifacts-uploader-service-account", "name": "credentials.json"}}
---
{"kind": "secret", "name": "gcp_download_build_container_assets_key", "get": {"path": "infra/data/ci/grafana/assets-downloader-build-container-service-account", "name": "credentials.json"}}
---
{"kind": "secret", "name": "azure_sp_app_id", "get": {"path": "infra/data/ci/datasources/cpp-azure-resourcemanager-credentials", "name": "application_id"}}
---
{"kind": "secret", "name": "azure_sp_app_pw", "get": {"path": "infra/data/ci/datasources/cpp-azure-resourcemanager-credentials", "name": "application_secret"}}
---
{"kind": "secret", "name": "azure_tenant", "get": {"path": "infra/data/ci/datasources/cpp-azure-resourcemanager-credentials", "name": "tenant_id"}}
---
{"kind": "secret", "name": "npm_token", "get": {"path": "infra/data/ci/grafana-release-eng/npm", "name": "token"}}
---
{"kind": "secret", "name": "packages_gpg_public_key", "get": {"path": "infra/data/ci/packages-publish/gpg", "name": "public-key-b64"}}
---
{"kind": "secret", "name": "packages_gpg_private_key", "get": {"path": "infra/data/ci/packages-publish/gpg", "name": "private-key-b64"}}
---
{"kind": "secret", "name": "packages_gpg_passphrase", "get": {"path": "infra/data/ci/packages-publish/gpg", "name": "passphrase"}}
---
{"kind": "secret", "name": "packages_service_account", "get": {"path": "infra/data/ci/packages-publish/service-account", "name": "credentials.json"}}
---
{"kind": "secret", "name": "packages_access_key_id", "get": {"path": "infra/data/ci/packages-publish/bucket-credentials", "name": "AccessID"}}
---
{"kind": "secret", "name": "packages_secret_access_key", "get": {"path": "infra/data/ci/packages-publish/bucket-credentials", "name": "Secret"}}
---
{"kind": "secret", "name": "static_asset_editions", "get": {"path": "infra/data/ci/grafana-release-eng/artifact-publishing", "name": "static_asset_editions"}}
---
{"kind": "secret", "name": "gcp_key_base64", "get": {"path": "infra/data/ci/grafana-release-eng/rgm", "name": "gcp_service_account_prod_base64"}}
---
{"kind": "secret", "name": "destination", "get": {"path": "infra/data/ci/grafana-release-eng/rgm", "name": "destination_prod"}}
---
{"kind": "secret", "name": "rgm_storybook_destination", "get": {"path": "infra/data/ci/grafana-release-eng/rgm", "name": "storybook_destination"}}
---
{"kind": "secret", "name": "rgm_cdn_destination", "get": {"path": "infra/data/ci/grafana-release-eng/rgm", "name": "cdn_destination"}}
---
{"kind": "secret", "name": "rgm_downloads_destination", "get": {"path": "infra/data/ci/grafana-release-eng/rgm", "name": "downloads_destination"}}
---
{"kind": "secret", "name": "dagger_token", "get": {"path": "infra/data/ci/grafana-release-eng/rgm", "name": "dagger_token"}}
---
{"kind": "secret", "name": "delivery-bot-app-private-key", "get": {"path": "ci/data/repo/grafana/grafana/delivery-bot-app", "name": "PRIVATE_KEY"}}
---
{"kind": "secret", "name": "gcr_credentials", "get": {"path": "secret/data/common/gcr", "name": "service-account"}}
