name: Backend Unit Tests Shared Workflow
description: >
  This reusable workflow runs backend unit tests for Grafana.
  It can be configured to run with either OSS or Enterprise wire tags.
  The workflow handles Go code generation, running unit tests,
  and processing/uploading test coverage to Codecov.
  It's used by both the OSS and Enterprise workflows, with the appropriate
  wire-tags parameter passed in based on the PR source.

on:
  workflow_call:
    inputs:
      wire-tags:
        description: 'Wire tags to use for the build' # 'oss' or 'enterprise'
        required: false
        type: string
        default: 'oss'
    secrets:
      codecov-token:
        required: true

jobs:
  backend-unit-testing-coverage:
    name: Backend Unit Testing & Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential shared-mime-info

      - name: Setup Enterprise
        if: inputs.wire-tags == 'enterprise'
        uses: ./.github/actions/setup-enterprise
        with:
          github-app-name: 'grafana-ci-bot'

      - name: Generate Go code
        run: make gen-go
        env:
          WIRE_TAGS: ${{ inputs.wire-tags }}

      - name: Run unit tests
        run: COVER_OPTS="-coverprofile=be-unit.cov -coverpkg=github.com/grafana/grafana/..." make test-go-unit
        env:
          WIRE_TAGS: ${{ inputs.wire-tags }}

      - name: Process and upload coverage
        uses: ./.github/actions/test-coverage-processor
        with:
          test-type: 'be-unit'
          # Needs to be named 'unit.cov' based on the Makefile command `make test-go-unit`
          coverage-file: 'unit.cov'
          codecov-token: ${{ secrets.codecov-token }}
          codecov-flag: 'be-unit'
          codecov-name: 'be-unit'
