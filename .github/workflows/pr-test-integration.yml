name: Integration Tests

on:
  push:
    branches:
      - main
      - release-*.*.*
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

permissions: {}

jobs:
  detect-changes:
    # Run on `grafana/grafana` main branch, or on pull requests to prevent double-running on mirrors
    if: (github.event_name == 'pull_request' || (github.event_name == 'push' && github.repository == 'grafana/grafana'))
    name: Detect whether code changed
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      changed: ${{ steps.detect-changes.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true # required to get more history in the changed-files action
          fetch-depth: 2
      - name: Detect changes
        id: detect-changes
        uses: ./.github/actions/change-detection
        with:
          self: .github/workflows/pr-test-integration.yml
  sqlite:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed == 'true'
    strategy:
      matrix:
        shard: [
          1/256, 2/256, 3/256, 4/256, 5/256, 6/256, 7/256, 8/256, 9/256, 10/256, 11/256, 12/256, 13/256, 14/256, 15/256, 16/256,
          17/256, 18/256, 19/256, 20/256, 21/256, 22/256, 23/256, 24/256, 25/256, 26/256, 27/256, 28/256, 29/256, 30/256, 31/256, 32/256,
          33/256, 34/256, 35/256, 36/256, 37/256, 38/256, 39/256, 40/256, 41/256, 42/256, 43/256, 44/256, 45/256, 46/256, 47/256, 48/256,
          49/256, 50/256, 51/256, 52/256, 53/256, 54/256, 55/256, 56/256, 57/256, 58/256, 59/256, 60/256, 61/256, 62/256, 63/256, 64/256,
          65/256, 66/256, 67/256, 68/256, 69/256, 70/256, 71/256, 72/256, 73/256, 74/256, 75/256, 76/256, 77/256, 78/256, 79/256, 80/256,
          81/256, 82/256, 83/256, 84/256, 85/256, 86/256, 87/256, 88/256, 89/256, 90/256, 91/256, 92/256, 93/256, 94/256, 95/256, 96/256,
          97/256, 98/256, 99/256, 100/256, 101/256, 102/256, 103/256, 104/256, 105/256, 106/256, 107/256, 108/256, 109/256, 110/256, 111/256, 112/256,
          113/256, 114/256, 115/256, 116/256, 117/256, 118/256, 119/256, 120/256, 121/256, 122/256, 123/256, 124/256, 125/256, 126/256, 127/256, 128/256,
          129/256, 130/256, 131/256, 132/256, 133/256, 134/256, 135/256, 136/256, 137/256, 138/256, 139/256, 140/256, 141/256, 142/256, 143/256, 144/256,
          145/256, 146/256, 147/256, 148/256, 149/256, 150/256, 151/256, 152/256, 153/256, 154/256, 155/256, 156/256, 157/256, 158/256, 159/256, 160/256,
          161/256, 162/256, 163/256, 164/256, 165/256, 166/256, 167/256, 168/256, 169/256, 170/256, 171/256, 172/256, 173/256, 174/256, 175/256, 176/256,
          177/256, 178/256, 179/256, 180/256, 181/256, 182/256, 183/256, 184/256, 185/256, 186/256, 187/256, 188/256, 189/256, 190/256, 191/256, 192/256,
          193/256, 194/256, 195/256, 196/256, 197/256, 198/256, 199/256, 200/256, 201/256, 202/256, 203/256, 204/256, 205/256, 206/256, 207/256, 208/256,
          209/256, 210/256, 211/256, 212/256, 213/256, 214/256, 215/256, 216/256, 217/256, 218/256, 219/256, 220/256, 221/256, 222/256, 223/256, 224/256,
          225/256, 226/256, 227/256, 228/256, 229/256, 230/256, 231/256, 232/256, 233/256, 234/256, 235/256, 236/256, 237/256, 238/256, 239/256, 240/256,
          241/256, 242/256, 243/256, 244/256, 245/256, 246/256, 247/256, 248/256, 249/256, 250/256, 251/256, 252/256, 253/256, 254/256, 255/256, 256/256,
        ]
      fail-fast: false

    name: Sqlite (${{ matrix.shard }})
    runs-on: ubuntu-x64-large-io
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Run tests
        env:
          SHARD: ${{ matrix.shard }}
        run: |
          set -euo pipefail
          readarray -t PACKAGES <<< "$(./scripts/ci/backend-tests/pkgs-with-tests-named.sh -b TestIntegration | ./scripts/ci/backend-tests/shard.sh -N"$SHARD" -d-)"
          go test -tags=sqlite -timeout=8m -run '^TestIntegration' "${PACKAGES[@]}"

  sqlite_nocgo:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed == 'true'
    strategy:
      matrix:
        shard: [
          1/256, 2/256, 3/256, 4/256, 5/256, 6/256, 7/256, 8/256, 9/256, 10/256, 11/256, 12/256, 13/256, 14/256, 15/256, 16/256,
          17/256, 18/256, 19/256, 20/256, 21/256, 22/256, 23/256, 24/256, 25/256, 26/256, 27/256, 28/256, 29/256, 30/256, 31/256, 32/256,
          33/256, 34/256, 35/256, 36/256, 37/256, 38/256, 39/256, 40/256, 41/256, 42/256, 43/256, 44/256, 45/256, 46/256, 47/256, 48/256,
          49/256, 50/256, 51/256, 52/256, 53/256, 54/256, 55/256, 56/256, 57/256, 58/256, 59/256, 60/256, 61/256, 62/256, 63/256, 64/256,
          65/256, 66/256, 67/256, 68/256, 69/256, 70/256, 71/256, 72/256, 73/256, 74/256, 75/256, 76/256, 77/256, 78/256, 79/256, 80/256,
          81/256, 82/256, 83/256, 84/256, 85/256, 86/256, 87/256, 88/256, 89/256, 90/256, 91/256, 92/256, 93/256, 94/256, 95/256, 96/256,
          97/256, 98/256, 99/256, 100/256, 101/256, 102/256, 103/256, 104/256, 105/256, 106/256, 107/256, 108/256, 109/256, 110/256, 111/256, 112/256,
          113/256, 114/256, 115/256, 116/256, 117/256, 118/256, 119/256, 120/256, 121/256, 122/256, 123/256, 124/256, 125/256, 126/256, 127/256, 128/256,
          129/256, 130/256, 131/256, 132/256, 133/256, 134/256, 135/256, 136/256, 137/256, 138/256, 139/256, 140/256, 141/256, 142/256, 143/256, 144/256,
          145/256, 146/256, 147/256, 148/256, 149/256, 150/256, 151/256, 152/256, 153/256, 154/256, 155/256, 156/256, 157/256, 158/256, 159/256, 160/256,
          161/256, 162/256, 163/256, 164/256, 165/256, 166/256, 167/256, 168/256, 169/256, 170/256, 171/256, 172/256, 173/256, 174/256, 175/256, 176/256,
          177/256, 178/256, 179/256, 180/256, 181/256, 182/256, 183/256, 184/256, 185/256, 186/256, 187/256, 188/256, 189/256, 190/256, 191/256, 192/256,
          193/256, 194/256, 195/256, 196/256, 197/256, 198/256, 199/256, 200/256, 201/256, 202/256, 203/256, 204/256, 205/256, 206/256, 207/256, 208/256,
          209/256, 210/256, 211/256, 212/256, 213/256, 214/256, 215/256, 216/256, 217/256, 218/256, 219/256, 220/256, 221/256, 222/256, 223/256, 224/256,
          225/256, 226/256, 227/256, 228/256, 229/256, 230/256, 231/256, 232/256, 233/256, 234/256, 235/256, 236/256, 237/256, 238/256, 239/256, 240/256,
          241/256, 242/256, 243/256, 244/256, 245/256, 246/256, 247/256, 248/256, 249/256, 250/256, 251/256, 252/256, 253/256, 254/256, 255/256, 256/256,
        ]
      fail-fast: false

    name: Sqlite Without CGo (${{ matrix.shard }})
    runs-on: ubuntu-x64-large-io
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Run tests
        env:
          SHARD: ${{ matrix.shard }}
        run: |
          set -euo pipefail
          readarray -t PACKAGES <<< "$(./scripts/ci/backend-tests/pkgs-with-tests-named.sh -b TestIntegration | ./scripts/ci/backend-tests/shard.sh -N"$SHARD" -d-)"
          CGO_ENABLED=0 go test -tags=sqlite -timeout=8m -run '^TestIntegration' "${PACKAGES[@]}"
  mysql:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed == 'true'
    strategy:
      matrix:
        shard: [
          1/256, 2/256, 3/256, 4/256, 5/256, 6/256, 7/256, 8/256, 9/256, 10/256, 11/256, 12/256, 13/256, 14/256, 15/256, 16/256,
          17/256, 18/256, 19/256, 20/256, 21/256, 22/256, 23/256, 24/256, 25/256, 26/256, 27/256, 28/256, 29/256, 30/256, 31/256, 32/256,
          33/256, 34/256, 35/256, 36/256, 37/256, 38/256, 39/256, 40/256, 41/256, 42/256, 43/256, 44/256, 45/256, 46/256, 47/256, 48/256,
          49/256, 50/256, 51/256, 52/256, 53/256, 54/256, 55/256, 56/256, 57/256, 58/256, 59/256, 60/256, 61/256, 62/256, 63/256, 64/256,
          65/256, 66/256, 67/256, 68/256, 69/256, 70/256, 71/256, 72/256, 73/256, 74/256, 75/256, 76/256, 77/256, 78/256, 79/256, 80/256,
          81/256, 82/256, 83/256, 84/256, 85/256, 86/256, 87/256, 88/256, 89/256, 90/256, 91/256, 92/256, 93/256, 94/256, 95/256, 96/256,
          97/256, 98/256, 99/256, 100/256, 101/256, 102/256, 103/256, 104/256, 105/256, 106/256, 107/256, 108/256, 109/256, 110/256, 111/256, 112/256,
          113/256, 114/256, 115/256, 116/256, 117/256, 118/256, 119/256, 120/256, 121/256, 122/256, 123/256, 124/256, 125/256, 126/256, 127/256, 128/256,
          129/256, 130/256, 131/256, 132/256, 133/256, 134/256, 135/256, 136/256, 137/256, 138/256, 139/256, 140/256, 141/256, 142/256, 143/256, 144/256,
          145/256, 146/256, 147/256, 148/256, 149/256, 150/256, 151/256, 152/256, 153/256, 154/256, 155/256, 156/256, 157/256, 158/256, 159/256, 160/256,
          161/256, 162/256, 163/256, 164/256, 165/256, 166/256, 167/256, 168/256, 169/256, 170/256, 171/256, 172/256, 173/256, 174/256, 175/256, 176/256,
          177/256, 178/256, 179/256, 180/256, 181/256, 182/256, 183/256, 184/256, 185/256, 186/256, 187/256, 188/256, 189/256, 190/256, 191/256, 192/256,
          193/256, 194/256, 195/256, 196/256, 197/256, 198/256, 199/256, 200/256, 201/256, 202/256, 203/256, 204/256, 205/256, 206/256, 207/256, 208/256,
          209/256, 210/256, 211/256, 212/256, 213/256, 214/256, 215/256, 216/256, 217/256, 218/256, 219/256, 220/256, 221/256, 222/256, 223/256, 224/256,
          225/256, 226/256, 227/256, 228/256, 229/256, 230/256, 231/256, 232/256, 233/256, 234/256, 235/256, 236/256, 237/256, 238/256, 239/256, 240/256,
          241/256, 242/256, 243/256, 244/256, 245/256, 246/256, 247/256, 248/256, 249/256, 250/256, 251/256, 252/256, 253/256, 254/256, 255/256, 256/256,
        ]
      fail-fast: false

    name: MySQL (${{ matrix.shard }})
    runs-on: ubuntu-x64-large-io
    permissions:
      contents: read
    env:
      GRAFANA_TEST_DB: mysql
      MYSQL_HOST: 127.0.0.1
    services:
      mysql:
        image: mysql:8.0.43
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: grafana_tests
          MYSQL_USER: grafana
          MYSQL_PASSWORD: password
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 3306:3306
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Setup MySQL devenv
        run: mysql -h 127.0.0.1 -P 3306 -u root -prootpass < devenv/docker/blocks/mysql_tests/setup.sql
      - name: Run tests
        env:
          SHARD: ${{ matrix.shard }}
        run: |
          set -euo pipefail
          readarray -t PACKAGES <<< "$(./scripts/ci/backend-tests/pkgs-with-tests-named.sh -b TestIntegration | ./scripts/ci/backend-tests/shard.sh -N"$SHARD" -d-)"
          CGO_ENABLED=0 go test -p=1 -tags=mysql -timeout=8m -run '^TestIntegration' "${PACKAGES[@]}"
  postgres:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed == 'true'
    strategy:
      matrix:
        shard: [
          1/256, 2/256, 3/256, 4/256, 5/256, 6/256, 7/256, 8/256, 9/256, 10/256, 11/256, 12/256, 13/256, 14/256, 15/256, 16/256,
          17/256, 18/256, 19/256, 20/256, 21/256, 22/256, 23/256, 24/256, 25/256, 26/256, 27/256, 28/256, 29/256, 30/256, 31/256, 32/256,
          33/256, 34/256, 35/256, 36/256, 37/256, 38/256, 39/256, 40/256, 41/256, 42/256, 43/256, 44/256, 45/256, 46/256, 47/256, 48/256,
          49/256, 50/256, 51/256, 52/256, 53/256, 54/256, 55/256, 56/256, 57/256, 58/256, 59/256, 60/256, 61/256, 62/256, 63/256, 64/256,
          65/256, 66/256, 67/256, 68/256, 69/256, 70/256, 71/256, 72/256, 73/256, 74/256, 75/256, 76/256, 77/256, 78/256, 79/256, 80/256,
          81/256, 82/256, 83/256, 84/256, 85/256, 86/256, 87/256, 88/256, 89/256, 90/256, 91/256, 92/256, 93/256, 94/256, 95/256, 96/256,
          97/256, 98/256, 99/256, 100/256, 101/256, 102/256, 103/256, 104/256, 105/256, 106/256, 107/256, 108/256, 109/256, 110/256, 111/256, 112/256,
          113/256, 114/256, 115/256, 116/256, 117/256, 118/256, 119/256, 120/256, 121/256, 122/256, 123/256, 124/256, 125/256, 126/256, 127/256, 128/256,
          129/256, 130/256, 131/256, 132/256, 133/256, 134/256, 135/256, 136/256, 137/256, 138/256, 139/256, 140/256, 141/256, 142/256, 143/256, 144/256,
          145/256, 146/256, 147/256, 148/256, 149/256, 150/256, 151/256, 152/256, 153/256, 154/256, 155/256, 156/256, 157/256, 158/256, 159/256, 160/256,
          161/256, 162/256, 163/256, 164/256, 165/256, 166/256, 167/256, 168/256, 169/256, 170/256, 171/256, 172/256, 173/256, 174/256, 175/256, 176/256,
          177/256, 178/256, 179/256, 180/256, 181/256, 182/256, 183/256, 184/256, 185/256, 186/256, 187/256, 188/256, 189/256, 190/256, 191/256, 192/256,
          193/256, 194/256, 195/256, 196/256, 197/256, 198/256, 199/256, 200/256, 201/256, 202/256, 203/256, 204/256, 205/256, 206/256, 207/256, 208/256,
          209/256, 210/256, 211/256, 212/256, 213/256, 214/256, 215/256, 216/256, 217/256, 218/256, 219/256, 220/256, 221/256, 222/256, 223/256, 224/256,
          225/256, 226/256, 227/256, 228/256, 229/256, 230/256, 231/256, 232/256, 233/256, 234/256, 235/256, 236/256, 237/256, 238/256, 239/256, 240/256,
          241/256, 242/256, 243/256, 244/256, 245/256, 246/256, 247/256, 248/256, 249/256, 250/256, 251/256, 252/256, 253/256, 254/256, 255/256, 256/256,
        ]
      fail-fast: false

    name: Postgres (${{ matrix.shard }})
    runs-on: ubuntu-x64-large-io
    permissions:
      contents: read
    env:
      GRAFANA_TEST_DB: postgres
      PGPASSWORD: grafanatest
      POSTGRES_HOST: 127.0.0.1
    services:
      postgres:
        image: postgres:17.6
        env:
          POSTGRES_USER: grafanatest
          POSTGRES_PASSWORD: grafanatest
          POSTGRES_DB: grafanatest
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Setup Postgres devenv
        run: psql -p 5432 -h 127.0.0.1 -U grafanatest -d grafanatest -f devenv/docker/blocks/postgres_tests/setup.sql
      - name: Run tests
        env:
          SHARD: ${{ matrix.shard }}
        run: |
          set -euo pipefail
          readarray -t PACKAGES <<< "$(./scripts/ci/backend-tests/pkgs-with-tests-named.sh -b TestIntegration | ./scripts/ci/backend-tests/shard.sh -N"$SHARD" -d-)"
          CGO_ENABLED=0 go test -p=1 -tags=postgres -timeout=8m -run '^TestIntegration' "${PACKAGES[@]}"

  # This is the job that is actually required by rulesets.
  # We want to only require one job instead of all the individual tests and shards.
  # Future work also allows us to start skipping some tests based on changed files.
  required-backend-integration-tests:
    needs:
      - mysql
      - postgres
      - sqlite
    # always() is the best function here.
    # success() || failure() will skip this function if any need is also skipped.
    # That means conditional test suites will fail the entire requirement check.
    if: always()

    name: All backend integration tests complete
    runs-on: ubuntu-latest
    steps:
      - name: Check test suites
        env:
          NEEDS: ${{ toJson(needs) }}
        run: |
          FAILURES="$(echo "$NEEDS" | jq 'with_entries(select(.value.result == "failure")) | map_values(.result)')"
          echo "$FAILURES"
          if [ "$(echo "$FAILURES" | jq '. | length')" != "0" ]; then
            exit 1
          fi
          echo "All OK!"
