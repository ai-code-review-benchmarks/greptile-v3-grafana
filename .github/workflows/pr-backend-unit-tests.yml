name: Backend Unit Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**/*.md'

permissions:
  contents: read
  id-token: write

env:
  EDITION: 'oss'
  WIRE_TAGS: 'oss'

jobs:
  backend-testing-coverage:
    name: Backend Testing & Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential shared-mime-info

      - name: Verify code generation
        run: |
          CODEGEN_VERIFY=1 make gen-cue
          CODEGEN_VERIFY=1 make gen-jsonnet

      - name: Generate Go code
        run: make gen-go

      - name: Run unit tests
        run: COVER_OPTS="-coverprofile=unit.cov -coverpkg=github.com/grafana/grafana/..." make test-go-unit

      - name: Process coverage output
        run: |
          # Ensure valid coverage file even if empty
          if [ ! -s unit.cov ]; then
            echo "mode: set" > unit.cov
          fi
          
          # Convert to different formats
          go tool cover -func unit.cov > unit-funcs.log
          go tool cover -html unit.cov -o unit.html
          
          # Add coverage summary to GitHub step summary
          echo '# Coverage' >> $GITHUB_STEP_SUMMARY
          if grep -q "total:" unit-funcs.log; then
            grep 'total:' unit-funcs.log | tr '\t' ' ' >> $GITHUB_STEP_SUMMARY
          else
            echo "No coverage data available" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: backend-unit-coverage
          path: |
            unit.cov
            unit-funcs.log
            unit.html
          retention-days: 30
          compression-level: 9

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
