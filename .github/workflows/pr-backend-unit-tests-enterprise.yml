name: Backend Unit Tests - Grafana + Enterprise

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'release-**'
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**/*.md'

permissions:
  contents: read
  id-token: write

jobs:
  backend-unit-testing-coverage:
    # Run this workflow for non-PR events (like pushes to `main` or `release-*`) OR for internal PRs (PRs not from forks)
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false
    name: Backend Unit Testing & Coverage
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TEST_TYPE: 'be-unit-enterprise'
      WIRE_TAGS: 'enterprise'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential shared-mime-info
          go install github.com/mfridman/tparse@c1754a1f484ac5cd422697b0fec635177ddc8507 # v0.17.0

      - name: Setup Enterprise
        uses: ./.github/actions/setup-enterprise
        with:
          github-app-name: 'grafana-ci-bot'

      - name: Generate Go code
        run: make gen-go
  
      - name: Verify test caching
        run: |
          # First run with a subset of tests
          echo "First test run:"
          go test -v -short ./pkg/api/...
          
          # Second run - should use cached results
          echo "Second test run (should use cache):"
          go test -v -short ./pkg/api/...
      # - name: Run unit tests
      #   run: GODEBUG=testcacheverify=1 make test-go-unit make test-go-unit
      #   env:
      #     # GO_UNIT_COVER_PROFILE: '${{ env.TEST_TYPE }}.cov'
      #     # GO_TEST_OUTPUT: ''
      #     # GO_UNIT_TEST_COVERPKG: 'github.com/grafana/grafana/...'
      #     GO_UNIT_COVERAGE: false
      #     GODEBUG: "testcacheverify=1"

      # Run Grafana Bench only on pushes to `main` or `release-*`
      - name: Install Grafana Bench
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-'))
        uses: ./.github/actions/setup-grafana-bench
        with:
          github-app-name: 'grafana-ci-bot'

      - name: Process output for Bench
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-'))
        run: |
          grafana-bench report \
            --trigger pr-backend-unit-tests-oss \
            --report-input go \
            --report-output log \
            --grafana-version "$(git rev-parse HEAD)" \
            --suite-name grafana-oss-and-enterprise-unit-tests \
            /tmp/${{ env.TEST_TYPE }}.log

      - name: Process and upload coverage
        uses: ./.github/actions/test-coverage-processor
        with:
          test-type: '${{ env.TEST_TYPE }}'
          coverage-file: '${{ env.TEST_TYPE }}.cov'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          codecov-flag: '${{ env.TEST_TYPE }}'
          codecov-name: '${{ env.TEST_TYPE }}'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
