name: grafana-fs-dev

services:
  cdn:
    image: grafana-frontend-cdn
    build:
      context: .
      dockerfile: tilt-frontend-cdn.dockerfile
    volumes:
      - ./public/build:/usr/share/nginx/html/public/build
      - ./public/fonts:/usr/share/nginx/html/public/fonts
    ports:
      - '3010:80'

  backend:
    image: grafana-backend
    build:
      context: .
      dockerfile: tilt-backend-base.dockerfile
    entrypoint: ['bin/grafana', 'server']
    volumes:
      - backend-data:/grafana/data
    environment:
      GF_FEATURE_TOGGLES_ENABLE: multiTenantFrontend
      GF_SERVER_CDN_URL: http://host.docker.internal:3010
      GF_PLUGINS_CDN_BASE_URL: 'https://plugins-cdn.grafana.net'
    ports:
      - '3011:3000'

  frontend-service:
    image: grafana-backend
    build:
      context: .
      dockerfile: tilt-backend-base.dockerfile
    entrypoint: ['bin/grafana', 'server', 'target']
    ports:
      - '3012:3000'
    environment:
      GF_DEFAULT_APP_MODE: development
      GF_DEFAULT_TARGET: frontend-server
      GF_SECURITY_CONTENT_SECURITY_POLICY: false
      GF_SERVER_CDN_URL: http://host.docker.internal:3010

  gateway:
    image: nginx:alpine
    ports:
      - '3001:80'
    volumes:
      - ./nginx-gateway.conf:/etc/nginx/conf.d/default.conf

  # traefik:
  #   image: traefik:v2.10
  #   command:
  #     - '--api.insecure=true'
  #     - '--providers.docker=true'
  #     - '--providers.docker.exposedbydefault=false'
  #     - '--entrypoints.web.address=:80'
  #   ports:
  #     - '3000:80'
  #     - '3080:8080'
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   labels:
  #     - 'traefik.enable=true'
  #     - 'traefik.http.routers.block-public.rule=Host(`localhost`) && (Path(`/public`) || PathPrefix(`/public/`) || PathPrefix(`/core:plugin`))'
  #     - 'traefik.http.routers.block-public.entrypoints=web'
  #     - 'traefik.http.routers.block-public.priority=100'
  #     - 'traefik.http.routers.block-public.service=noop@internal'

volumes:
  backend-data:
  backend-cache-go-mod:
  backend-cache-go-build:
