docker_compose("./docker-compose.yaml")

local_resource(
  'frontend-build',
  cmd='rm -rf public/build/assets-manifest.json',
  serve_cmd='yarn start:noLint',
  deps=[
    'package.json',
  ],
  readiness_probe=probe(
    initial_delay_secs=5, # wait for the assets-manifest.json to first be deleted
    period_secs=1,
    exec=exec_action(["bash", "-c", "cat public/build/assets-manifest.json | grep entrypoints"])
  ),
  allow_parallel=True
)

dc_resource("backend", resource_deps=["frontend-build"])
dc_resource("frontend-service", resource_deps=["frontend-build"])
dc_resource("proxy", resource_deps=["backend", "frontend-service"])

docker_build('grafana-backend', '../..',
  dockerfile='backend.dockerfile',
  only=[
    "./Makefile",
    "./devenv/frontend-service/build-grafana.sh",

    "./apps",
    "./pkg",
    "./scripts",

    "./go.sum",
    "./go.mod",
    "./go.work",
    "./go.work.sum",

    "./kinds",
    "./kindsv2",
    "./public/api-merged.json",
    "./package.json",

    "./conf/defaults.ini",
    "./conf/ldap.toml",
    "./conf/ldap_multiple.toml",
    "./public/emails",
    "./public/views",
    "./public/dashboards",
    "./public/build/assets-manifest.json",
  ],
  live_update = [
    sync('./public/build/assets-manifest.json', '/grafana/public/build/assets-manifest.json'),
    restart_container()
  ]
)
