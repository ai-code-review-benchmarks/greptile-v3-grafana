config.define_bool("docker-builder")
cfg = config.parse()

use_docker_builder = cfg.get('docker-builder', False)

# --- Frontend processes
local_resource(
  'yarn install',
  cmd='yarn install',
  deps=[
    'yarn.lock',
  ],
  labels=["local"]
)

local_resource(
  'yarn start',
  cmd='rm -rf public/build/assets-manifest.json',
  serve_cmd='yarn start:noLint',
  resource_deps=['yarn install'],

  # Note: this doesn't seem to work as expected - the assets-manifest is somehow created before
  # the webpack build is complete?
  readiness_probe=probe(
    initial_delay_secs=10,
    period_secs=1,
    exec=exec_action(["bash", "-c", "stat public/build/assets-manifest.json"]),
  ),
  allow_parallel=True,
  labels=["local"]
)

# If -- --docker-builder is set, Grafana will be build in a Docker container.
# First we build that container, then tell the build script to use it for builds.
build_backend_resource_deps = []
build_backend_env = {}
if use_docker_builder:
  build_backend_resource_deps = ['build builder']
  build_backend_env = { 
    'USE_DOCKER_BUILDER': "true",
  }
  local_resource(
    "build builder",
    cmd="docker build -f ./grafana-fs-builder.dockerfile -t grafana-fs-builder .",
    allow_parallel=True,
    labels=["local"]
  )

local_resource(
  'backend-build',
  "bash ./build-grafana.sh",
  resource_deps=build_backend_resource_deps,
  deps=[
    '../../pkg',
    '../../apps',
    '../../kinds',
    '../../kindsv2',
    '../../local',
    '../../scripts',
    '../../conf',
    '../../go.sum',
    '../../go.mod',
  ],
  env=build_backend_env,
  allow_parallel=True,
  labels=["local"]
)

# --- Docker Compose
docker_compose("./docker-compose.yaml")

# First argument is the name of the service from the docker-compose file.
dc_resource("proxy", resource_deps=["backend", "frontend-service"], labels=["services"])

dc_resource("backend",
  resource_deps=["yarn start", "backend-build"],
  labels=["services"]
)

dc_resource("frontend-service",
  resource_deps=["yarn start", "backend-build"],
  labels=["services"]
)

docker_build('grafana-fs-dev', '../..',
  dockerfile='grafana-fs-dev.dockerfile',
  only=[
    'devenv/frontend-service/build/grafana',
    'conf/defaults.ini',
    'public/emails',
    'public/views',
    'public/dashboards',
    'public/app/plugins',
    'public/build/assets-manifest.json',
  ],
  live_update = [
    sync('./build/grafana', '/grafana/bin/grafana'),
    sync('../../conf/defaults.ini', '/grafana/conf/defaults.ini'),
    sync('../../public/emails', '/grafana/public/emails'),
    sync('../../public/views', '/grafana/public/views'),
    sync('../../public/dashboards', '/grafana/public/dashboards'),
    sync('../../public/app/plugins', '/grafana/public/app/plugins'),
    sync('../../public/build/assets-manifest.json', '/grafana/public/build/assets-manifest.json'),
    restart_container()
  ]
)

docker_build('grafana-proxy', '.',
  dockerfile='proxy.dockerfile',
  only=[
    "./nginx.conf",
  ],
  live_update = [
    sync('./nginx.conf', '/etc/nginx/conf.d/default.conf'),
    restart_container()
  ]
)
