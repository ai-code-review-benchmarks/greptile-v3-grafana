// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: extention.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TupleKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Relation      string                 `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	Object        string                 `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	Condition     *RelationshipCondition `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TupleKey) Reset() {
	*x = TupleKey{}
	mi := &file_extention_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TupleKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleKey) ProtoMessage() {}

func (x *TupleKey) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleKey.ProtoReflect.Descriptor instead.
func (*TupleKey) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{0}
}

func (x *TupleKey) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *TupleKey) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *TupleKey) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *TupleKey) GetCondition() *RelationshipCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type Tuple struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *TupleKey              `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tuple) Reset() {
	*x = Tuple{}
	mi := &file_extention_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tuple) ProtoMessage() {}

func (x *Tuple) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tuple.ProtoReflect.Descriptor instead.
func (*Tuple) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{1}
}

func (x *Tuple) GetKey() *TupleKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Tuple) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type TupleKeyWithoutCondition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Relation      string                 `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	Object        string                 `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TupleKeyWithoutCondition) Reset() {
	*x = TupleKeyWithoutCondition{}
	mi := &file_extention_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TupleKeyWithoutCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleKeyWithoutCondition) ProtoMessage() {}

func (x *TupleKeyWithoutCondition) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleKeyWithoutCondition.ProtoReflect.Descriptor instead.
func (*TupleKeyWithoutCondition) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{2}
}

func (x *TupleKeyWithoutCondition) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *TupleKeyWithoutCondition) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *TupleKeyWithoutCondition) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

type RelationshipCondition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelationshipCondition) Reset() {
	*x = RelationshipCondition{}
	mi := &file_extention_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelationshipCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationshipCondition) ProtoMessage() {}

func (x *RelationshipCondition) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationshipCondition.ProtoReflect.Descriptor instead.
func (*RelationshipCondition) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{3}
}

func (x *RelationshipCondition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RelationshipCondition) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

type ReadRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Namespace         string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TupleKey          *ReadRequestTupleKey   `protobuf:"bytes,2,opt,name=tuple_key,json=tupleKey,proto3" json:"tuple_key,omitempty"`
	PageSize          *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	ContinuationToken string                 `protobuf:"bytes,4,opt,name=continuation_token,json=continuationToken,proto3" json:"continuation_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_extention_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{4}
}

func (x *ReadRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ReadRequest) GetTupleKey() *ReadRequestTupleKey {
	if x != nil {
		return x.TupleKey
	}
	return nil
}

func (x *ReadRequest) GetPageSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageSize
	}
	return nil
}

func (x *ReadRequest) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

type ReadRequestTupleKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Relation      string                 `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	Object        string                 `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequestTupleKey) Reset() {
	*x = ReadRequestTupleKey{}
	mi := &file_extention_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequestTupleKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequestTupleKey) ProtoMessage() {}

func (x *ReadRequestTupleKey) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequestTupleKey.ProtoReflect.Descriptor instead.
func (*ReadRequestTupleKey) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{5}
}

func (x *ReadRequestTupleKey) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReadRequestTupleKey) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *ReadRequestTupleKey) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

type ReadResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Tuples            []*Tuple               `protobuf:"bytes,1,rep,name=tuples,proto3" json:"tuples,omitempty"`
	ContinuationToken string                 `protobuf:"bytes,2,opt,name=continuation_token,json=continuationToken,proto3" json:"continuation_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_extention_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{6}
}

func (x *ReadResponse) GetTuples() []*Tuple {
	if x != nil {
		return x.Tuples
	}
	return nil
}

func (x *ReadResponse) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

type WriteRequestWrites struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TupleKeys     []*TupleKey            `protobuf:"bytes,1,rep,name=tuple_keys,json=tupleKeys,proto3" json:"tuple_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteRequestWrites) Reset() {
	*x = WriteRequestWrites{}
	mi := &file_extention_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequestWrites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequestWrites) ProtoMessage() {}

func (x *WriteRequestWrites) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequestWrites.ProtoReflect.Descriptor instead.
func (*WriteRequestWrites) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{7}
}

func (x *WriteRequestWrites) GetTupleKeys() []*TupleKey {
	if x != nil {
		return x.TupleKeys
	}
	return nil
}

type WriteRequestDeletes struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	TupleKeys     []*TupleKeyWithoutCondition `protobuf:"bytes,1,rep,name=tuple_keys,json=tupleKeys,proto3" json:"tuple_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteRequestDeletes) Reset() {
	*x = WriteRequestDeletes{}
	mi := &file_extention_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequestDeletes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequestDeletes) ProtoMessage() {}

func (x *WriteRequestDeletes) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequestDeletes.ProtoReflect.Descriptor instead.
func (*WriteRequestDeletes) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{8}
}

func (x *WriteRequestDeletes) GetTupleKeys() []*TupleKeyWithoutCondition {
	if x != nil {
		return x.TupleKeys
	}
	return nil
}

type WriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Writes        *WriteRequestWrites    `protobuf:"bytes,2,opt,name=writes,proto3" json:"writes,omitempty"`
	Deletes       *WriteRequestDeletes   `protobuf:"bytes,3,opt,name=deletes,proto3" json:"deletes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	mi := &file_extention_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{9}
}

func (x *WriteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *WriteRequest) GetWrites() *WriteRequestWrites {
	if x != nil {
		return x.Writes
	}
	return nil
}

func (x *WriteRequest) GetDeletes() *WriteRequestDeletes {
	if x != nil {
		return x.Deletes
	}
	return nil
}

type WriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	mi := &file_extention_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{10}
}

type BatchCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subject       string                 `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Items         []*BatchCheckItem      `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCheckRequest) Reset() {
	*x = BatchCheckRequest{}
	mi := &file_extention_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckRequest) ProtoMessage() {}

func (x *BatchCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckRequest.ProtoReflect.Descriptor instead.
func (*BatchCheckRequest) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{11}
}

func (x *BatchCheckRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *BatchCheckRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *BatchCheckRequest) GetItems() []*BatchCheckItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type BatchCheckItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Verb          string                 `protobuf:"bytes,1,opt,name=verb,proto3" json:"verb,omitempty"`
	Group         string                 `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Resource      string                 `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Subresource   string                 `protobuf:"bytes,5,opt,name=subresource,proto3" json:"subresource,omitempty"`
	Folder        string                 `protobuf:"bytes,6,opt,name=folder,proto3" json:"folder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCheckItem) Reset() {
	*x = BatchCheckItem{}
	mi := &file_extention_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckItem) ProtoMessage() {}

func (x *BatchCheckItem) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckItem.ProtoReflect.Descriptor instead.
func (*BatchCheckItem) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{12}
}

func (x *BatchCheckItem) GetVerb() string {
	if x != nil {
		return x.Verb
	}
	return ""
}

func (x *BatchCheckItem) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *BatchCheckItem) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *BatchCheckItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BatchCheckItem) GetSubresource() string {
	if x != nil {
		return x.Subresource
	}
	return ""
}

func (x *BatchCheckItem) GetFolder() string {
	if x != nil {
		return x.Folder
	}
	return ""
}

type BatchCheckResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Groups        map[string]*BatchCheckGroupResource `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCheckResponse) Reset() {
	*x = BatchCheckResponse{}
	mi := &file_extention_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckResponse) ProtoMessage() {}

func (x *BatchCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckResponse.ProtoReflect.Descriptor instead.
func (*BatchCheckResponse) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{13}
}

func (x *BatchCheckResponse) GetGroups() map[string]*BatchCheckGroupResource {
	if x != nil {
		return x.Groups
	}
	return nil
}

type BatchCheckGroupResource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         map[string]bool        `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCheckGroupResource) Reset() {
	*x = BatchCheckGroupResource{}
	mi := &file_extention_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckGroupResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckGroupResource) ProtoMessage() {}

func (x *BatchCheckGroupResource) ProtoReflect() protoreflect.Message {
	mi := &file_extention_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckGroupResource.ProtoReflect.Descriptor instead.
func (*BatchCheckGroupResource) Descriptor() ([]byte, []int) {
	return file_extention_proto_rawDescGZIP(), []int{14}
}

func (x *BatchCheckGroupResource) GetItems() map[string]bool {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_extention_proto protoreflect.FileDescriptor

const file_extention_proto_rawDesc = "" +
	"\n" +
	"\x0fextention.proto\x12\x12authz.extention.v1\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x9b\x01\n" +
	"\bTupleKey\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x1a\n" +
	"\brelation\x18\x02 \x01(\tR\brelation\x12\x16\n" +
	"\x06object\x18\x03 \x01(\tR\x06object\x12G\n" +
	"\tcondition\x18\x04 \x01(\v2).authz.extention.v1.RelationshipConditionR\tcondition\"q\n" +
	"\x05Tuple\x12.\n" +
	"\x03key\x18\x01 \x01(\v2\x1c.authz.extention.v1.TupleKeyR\x03key\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"b\n" +
	"\x18TupleKeyWithoutCondition\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x1a\n" +
	"\brelation\x18\x02 \x01(\tR\brelation\x12\x16\n" +
	"\x06object\x18\x03 \x01(\tR\x06object\"^\n" +
	"\x15RelationshipCondition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x121\n" +
	"\acontext\x18\x02 \x01(\v2\x17.google.protobuf.StructR\acontext\"\xda\x01\n" +
	"\vReadRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12D\n" +
	"\ttuple_key\x18\x02 \x01(\v2'.authz.extention.v1.ReadRequestTupleKeyR\btupleKey\x128\n" +
	"\tpage_size\x18\x03 \x01(\v2\x1b.google.protobuf.Int32ValueR\bpageSize\x12-\n" +
	"\x12continuation_token\x18\x04 \x01(\tR\x11continuationToken\"]\n" +
	"\x13ReadRequestTupleKey\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x1a\n" +
	"\brelation\x18\x02 \x01(\tR\brelation\x12\x16\n" +
	"\x06object\x18\x03 \x01(\tR\x06object\"p\n" +
	"\fReadResponse\x121\n" +
	"\x06tuples\x18\x01 \x03(\v2\x19.authz.extention.v1.TupleR\x06tuples\x12-\n" +
	"\x12continuation_token\x18\x02 \x01(\tR\x11continuationToken\"Q\n" +
	"\x12WriteRequestWrites\x12;\n" +
	"\n" +
	"tuple_keys\x18\x01 \x03(\v2\x1c.authz.extention.v1.TupleKeyR\ttupleKeys\"b\n" +
	"\x13WriteRequestDeletes\x12K\n" +
	"\n" +
	"tuple_keys\x18\x01 \x03(\v2,.authz.extention.v1.TupleKeyWithoutConditionR\ttupleKeys\"\xaf\x01\n" +
	"\fWriteRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12>\n" +
	"\x06writes\x18\x02 \x01(\v2&.authz.extention.v1.WriteRequestWritesR\x06writes\x12A\n" +
	"\adeletes\x18\x03 \x01(\v2'.authz.extention.v1.WriteRequestDeletesR\adeletes\"\x0f\n" +
	"\rWriteResponse\"\x85\x01\n" +
	"\x11BatchCheckRequest\x12\x18\n" +
	"\asubject\x18\x01 \x01(\tR\asubject\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x128\n" +
	"\x05items\x18\x03 \x03(\v2\".authz.extention.v1.BatchCheckItemR\x05items\"\xa4\x01\n" +
	"\x0eBatchCheckItem\x12\x12\n" +
	"\x04verb\x18\x01 \x01(\tR\x04verb\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\x12\x1a\n" +
	"\bresource\x18\x03 \x01(\tR\bresource\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vsubresource\x18\x05 \x01(\tR\vsubresource\x12\x16\n" +
	"\x06folder\x18\x06 \x01(\tR\x06folder\"\xc8\x01\n" +
	"\x12BatchCheckResponse\x12J\n" +
	"\x06groups\x18\x01 \x03(\v22.authz.extention.v1.BatchCheckResponse.GroupsEntryR\x06groups\x1af\n" +
	"\vGroupsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12A\n" +
	"\x05value\x18\x02 \x01(\v2+.authz.extention.v1.BatchCheckGroupResourceR\x05value:\x028\x01\"\xa1\x01\n" +
	"\x17BatchCheckGroupResource\x12L\n" +
	"\x05items\x18\x01 \x03(\v26.authz.extention.v1.BatchCheckGroupResource.ItemsEntryR\x05items\x1a8\n" +
	"\n" +
	"ItemsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x012\x8d\x02\n" +
	"\x15AuthzExtentionService\x12[\n" +
	"\n" +
	"BatchCheck\x12%.authz.extention.v1.BatchCheckRequest\x1a&.authz.extention.v1.BatchCheckResponse\x12I\n" +
	"\x04Read\x12\x1f.authz.extention.v1.ReadRequest\x1a .authz.extention.v1.ReadResponse\x12L\n" +
	"\x05Write\x12 .authz.extention.v1.WriteRequest\x1a!.authz.extention.v1.WriteResponseB8Z6github.com/grafana/grafana/pkg/services/authz/proto/v1b\x06proto3"

var (
	file_extention_proto_rawDescOnce sync.Once
	file_extention_proto_rawDescData []byte
)

func file_extention_proto_rawDescGZIP() []byte {
	file_extention_proto_rawDescOnce.Do(func() {
		file_extention_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_extention_proto_rawDesc), len(file_extention_proto_rawDesc)))
	})
	return file_extention_proto_rawDescData
}

var file_extention_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_extention_proto_goTypes = []any{
	(*TupleKey)(nil),                 // 0: authz.extention.v1.TupleKey
	(*Tuple)(nil),                    // 1: authz.extention.v1.Tuple
	(*TupleKeyWithoutCondition)(nil), // 2: authz.extention.v1.TupleKeyWithoutCondition
	(*RelationshipCondition)(nil),    // 3: authz.extention.v1.RelationshipCondition
	(*ReadRequest)(nil),              // 4: authz.extention.v1.ReadRequest
	(*ReadRequestTupleKey)(nil),      // 5: authz.extention.v1.ReadRequestTupleKey
	(*ReadResponse)(nil),             // 6: authz.extention.v1.ReadResponse
	(*WriteRequestWrites)(nil),       // 7: authz.extention.v1.WriteRequestWrites
	(*WriteRequestDeletes)(nil),      // 8: authz.extention.v1.WriteRequestDeletes
	(*WriteRequest)(nil),             // 9: authz.extention.v1.WriteRequest
	(*WriteResponse)(nil),            // 10: authz.extention.v1.WriteResponse
	(*BatchCheckRequest)(nil),        // 11: authz.extention.v1.BatchCheckRequest
	(*BatchCheckItem)(nil),           // 12: authz.extention.v1.BatchCheckItem
	(*BatchCheckResponse)(nil),       // 13: authz.extention.v1.BatchCheckResponse
	(*BatchCheckGroupResource)(nil),  // 14: authz.extention.v1.BatchCheckGroupResource
	nil,                              // 15: authz.extention.v1.BatchCheckResponse.GroupsEntry
	nil,                              // 16: authz.extention.v1.BatchCheckGroupResource.ItemsEntry
	(*timestamppb.Timestamp)(nil),    // 17: google.protobuf.Timestamp
	(*structpb.Struct)(nil),          // 18: google.protobuf.Struct
	(*wrapperspb.Int32Value)(nil),    // 19: google.protobuf.Int32Value
}
var file_extention_proto_depIdxs = []int32{
	3,  // 0: authz.extention.v1.TupleKey.condition:type_name -> authz.extention.v1.RelationshipCondition
	0,  // 1: authz.extention.v1.Tuple.key:type_name -> authz.extention.v1.TupleKey
	17, // 2: authz.extention.v1.Tuple.timestamp:type_name -> google.protobuf.Timestamp
	18, // 3: authz.extention.v1.RelationshipCondition.context:type_name -> google.protobuf.Struct
	5,  // 4: authz.extention.v1.ReadRequest.tuple_key:type_name -> authz.extention.v1.ReadRequestTupleKey
	19, // 5: authz.extention.v1.ReadRequest.page_size:type_name -> google.protobuf.Int32Value
	1,  // 6: authz.extention.v1.ReadResponse.tuples:type_name -> authz.extention.v1.Tuple
	0,  // 7: authz.extention.v1.WriteRequestWrites.tuple_keys:type_name -> authz.extention.v1.TupleKey
	2,  // 8: authz.extention.v1.WriteRequestDeletes.tuple_keys:type_name -> authz.extention.v1.TupleKeyWithoutCondition
	7,  // 9: authz.extention.v1.WriteRequest.writes:type_name -> authz.extention.v1.WriteRequestWrites
	8,  // 10: authz.extention.v1.WriteRequest.deletes:type_name -> authz.extention.v1.WriteRequestDeletes
	12, // 11: authz.extention.v1.BatchCheckRequest.items:type_name -> authz.extention.v1.BatchCheckItem
	15, // 12: authz.extention.v1.BatchCheckResponse.groups:type_name -> authz.extention.v1.BatchCheckResponse.GroupsEntry
	16, // 13: authz.extention.v1.BatchCheckGroupResource.items:type_name -> authz.extention.v1.BatchCheckGroupResource.ItemsEntry
	14, // 14: authz.extention.v1.BatchCheckResponse.GroupsEntry.value:type_name -> authz.extention.v1.BatchCheckGroupResource
	11, // 15: authz.extention.v1.AuthzExtentionService.BatchCheck:input_type -> authz.extention.v1.BatchCheckRequest
	4,  // 16: authz.extention.v1.AuthzExtentionService.Read:input_type -> authz.extention.v1.ReadRequest
	9,  // 17: authz.extention.v1.AuthzExtentionService.Write:input_type -> authz.extention.v1.WriteRequest
	13, // 18: authz.extention.v1.AuthzExtentionService.BatchCheck:output_type -> authz.extention.v1.BatchCheckResponse
	6,  // 19: authz.extention.v1.AuthzExtentionService.Read:output_type -> authz.extention.v1.ReadResponse
	10, // 20: authz.extention.v1.AuthzExtentionService.Write:output_type -> authz.extention.v1.WriteResponse
	18, // [18:21] is the sub-list for method output_type
	15, // [15:18] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_extention_proto_init() }
func file_extention_proto_init() {
	if File_extention_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_extention_proto_rawDesc), len(file_extention_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_extention_proto_goTypes,
		DependencyIndexes: file_extention_proto_depIdxs,
		MessageInfos:      file_extention_proto_msgTypes,
	}.Build()
	File_extention_proto = out.File
	file_extention_proto_goTypes = nil
	file_extention_proto_depIdxs = nil
}
