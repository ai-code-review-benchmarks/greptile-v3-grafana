// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v0alpha1

// RepositoryStatusApplyConfiguration represents a declarative configuration of the RepositoryStatus type for use
// with apply.
type RepositoryStatusApplyConfiguration struct {
	Health *HealthStatusApplyConfiguration `json:"health,omitempty"`
	Sync   *SyncStatusApplyConfiguration   `json:"sync,omitempty"`
}

// RepositoryStatusApplyConfiguration constructs a declarative configuration of the RepositoryStatus type for use with
// apply.
func RepositoryStatus() *RepositoryStatusApplyConfiguration {
	return &RepositoryStatusApplyConfiguration{}
}

// WithHealth sets the Health field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Health field is set to the value of the last call.
func (b *RepositoryStatusApplyConfiguration) WithHealth(value *HealthStatusApplyConfiguration) *RepositoryStatusApplyConfiguration {
	b.Health = value
	return b
}

// WithSync sets the Sync field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Sync field is set to the value of the last call.
func (b *RepositoryStatusApplyConfiguration) WithSync(value *SyncStatusApplyConfiguration) *RepositoryStatusApplyConfiguration {
	b.Sync = value
	return b
}
